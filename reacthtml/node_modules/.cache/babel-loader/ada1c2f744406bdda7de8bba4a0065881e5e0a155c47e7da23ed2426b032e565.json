{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport AnalyticsClass from './Analytics';\nimport Amplify, { ConsoleLogger as Logger, Hub } from '@aws-amplify/core';\nvar logger = new Logger('Analytics');\nvar endpointUpdated = false;\nvar authConfigured = false;\nvar analyticsConfigured = false;\nvar _instance = null;\nif (!_instance) {\n  logger.debug('Create Analytics Instance');\n  _instance = new AnalyticsClass();\n}\nvar Analytics = _instance;\nAmplify.register(Analytics);\nexport default Analytics;\nexport { AnalyticsClass };\nexport * from './Providers';\nvar listener = function (capsule) {\n  var channel = capsule.channel,\n    payload = capsule.payload,\n    source = capsule.source;\n  logger.debug('on hub capsule ' + channel, payload);\n  switch (channel) {\n    case 'auth':\n      authEvent(payload);\n      break;\n    case 'storage':\n      storageEvent(payload);\n      break;\n    case 'analytics':\n      analyticsEvent(payload);\n      break;\n    default:\n      break;\n  }\n};\nvar storageEvent = function (payload) {\n  var _a = payload.data,\n    attrs = _a.attrs,\n    metrics = _a.metrics;\n  if (!attrs) return;\n  if (analyticsConfigured) {\n    Analytics.record({\n      name: 'Storage',\n      attributes: attrs,\n      metrics: metrics\n    }).catch(function (e) {\n      logger.debug('Failed to send the storage event automatically', e);\n    });\n  }\n};\nvar authEvent = function (payload) {\n  var event = payload.event;\n  if (!event) {\n    return;\n  }\n  switch (event) {\n    case 'signIn':\n      if (authConfigured && analyticsConfigured) {\n        Analytics.record({\n          name: '_userauth.sign_in'\n        }).catch(function (e) {\n          logger.debug('Failed to send the sign in event automatically', e);\n        });\n      }\n      break;\n    case 'signUp':\n      if (authConfigured && analyticsConfigured) {\n        Analytics.record({\n          name: '_userauth.sign_up'\n        }).catch(function (e) {\n          logger.debug('Failed to send the sign up event automatically', e);\n        });\n      }\n      break;\n    case 'signOut':\n      break;\n    case 'signIn_failure':\n      if (authConfigured && analyticsConfigured) {\n        Analytics.record({\n          name: '_userauth.auth_fail'\n        }).catch(function (e) {\n          logger.debug('Failed to send the sign in failure event automatically', e);\n        });\n      }\n      break;\n    case 'configured':\n      authConfigured = true;\n      if (authConfigured && analyticsConfigured) {\n        sendEvents();\n      }\n      break;\n  }\n};\nvar analyticsEvent = function (payload) {\n  var event = payload.event;\n  if (!event) return;\n  switch (event) {\n    case 'pinpointProvider_configured':\n      analyticsConfigured = true;\n      if (authConfigured && analyticsConfigured) {\n        sendEvents();\n      }\n      break;\n  }\n};\nvar sendEvents = function () {\n  var config = Analytics.configure();\n  if (!endpointUpdated && config['autoSessionRecord']) {\n    Analytics.updateEndpoint({\n      immediate: true\n    }).catch(function (e) {\n      logger.debug('Failed to update the endpoint', e);\n    });\n    endpointUpdated = true;\n  }\n  Analytics.autoTrack('session', {\n    enable: config['autoSessionRecord']\n  });\n};\nHub.listen('auth', listener);\nHub.listen('storage', listener);\nHub.listen('analytics', listener);","map":{"version":3,"names":["AnalyticsClass","Amplify","ConsoleLogger","Logger","Hub","logger","endpointUpdated","authConfigured","analyticsConfigured","_instance","debug","Analytics","register","listener","capsule","channel","payload","source","authEvent","storageEvent","analyticsEvent","_a","data","attrs","metrics","record","name","attributes","catch","e","event","sendEvents","config","configure","updateEndpoint","immediate","autoTrack","enable","listen"],"sources":["C:\\Study\\6805\\React\\reacthtml\\node_modules\\@aws-amplify\\analytics\\src\\index.ts"],"sourcesContent":["/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\n\r\nimport AnalyticsClass from './Analytics';\r\nimport { AnalyticsProvider } from './types';\r\n\r\nimport Amplify, {\r\n\tConsoleLogger as Logger,\r\n\tHub,\r\n\tLinking,\r\n\tPlatform,\r\n} from '@aws-amplify/core';\r\n\r\nconst logger = new Logger('Analytics');\r\nlet endpointUpdated = false;\r\nlet authConfigured = false;\r\nlet analyticsConfigured = false;\r\n\r\nlet _instance: AnalyticsClass = null;\r\n\r\nif (!_instance) {\r\n\tlogger.debug('Create Analytics Instance');\r\n\t_instance = new AnalyticsClass();\r\n}\r\n\r\nconst Analytics = _instance;\r\nAmplify.register(Analytics);\r\n\r\nexport default Analytics;\r\nexport { AnalyticsProvider };\r\nexport { AnalyticsClass };\r\nexport * from './Providers';\r\n\r\nconst listener = capsule => {\r\n\tconst { channel, payload, source } = capsule;\r\n\tlogger.debug('on hub capsule ' + channel, payload);\r\n\r\n\tswitch (channel) {\r\n\t\tcase 'auth':\r\n\t\t\tauthEvent(payload);\r\n\t\t\tbreak;\r\n\t\tcase 'storage':\r\n\t\t\tstorageEvent(payload);\r\n\t\t\tbreak;\r\n\t\tcase 'analytics':\r\n\t\t\tanalyticsEvent(payload);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n};\r\n\r\nconst storageEvent = payload => {\r\n\tconst {\r\n\t\tdata: { attrs, metrics },\r\n\t} = payload;\r\n\tif (!attrs) return;\r\n\r\n\tif (analyticsConfigured) {\r\n\t\tAnalytics.record({\r\n\t\t\tname: 'Storage',\r\n\t\t\tattributes: attrs,\r\n\t\t\tmetrics,\r\n\t\t}).catch(e => {\r\n\t\t\tlogger.debug('Failed to send the storage event automatically', e);\r\n\t\t});\r\n\t}\r\n};\r\n\r\nconst authEvent = payload => {\r\n\tconst { event } = payload;\r\n\tif (!event) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tswitch (event) {\r\n\t\tcase 'signIn':\r\n\t\t\tif (authConfigured && analyticsConfigured) {\r\n\t\t\t\tAnalytics.record({\r\n\t\t\t\t\tname: '_userauth.sign_in',\r\n\t\t\t\t}).catch(e => {\r\n\t\t\t\t\tlogger.debug('Failed to send the sign in event automatically', e);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'signUp':\r\n\t\t\tif (authConfigured && analyticsConfigured) {\r\n\t\t\t\tAnalytics.record({\r\n\t\t\t\t\tname: '_userauth.sign_up',\r\n\t\t\t\t}).catch(e => {\r\n\t\t\t\t\tlogger.debug('Failed to send the sign up event automatically', e);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'signOut':\r\n\t\t\tbreak;\r\n\t\tcase 'signIn_failure':\r\n\t\t\tif (authConfigured && analyticsConfigured) {\r\n\t\t\t\tAnalytics.record({\r\n\t\t\t\t\tname: '_userauth.auth_fail',\r\n\t\t\t\t}).catch(e => {\r\n\t\t\t\t\tlogger.debug(\r\n\t\t\t\t\t\t'Failed to send the sign in failure event automatically',\r\n\t\t\t\t\t\te\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'configured':\r\n\t\t\tauthConfigured = true;\r\n\t\t\tif (authConfigured && analyticsConfigured) {\r\n\t\t\t\tsendEvents();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t}\r\n};\r\n\r\nconst analyticsEvent = payload => {\r\n\tconst { event } = payload;\r\n\tif (!event) return;\r\n\r\n\tswitch (event) {\r\n\t\tcase 'pinpointProvider_configured':\r\n\t\t\tanalyticsConfigured = true;\r\n\t\t\tif (authConfigured && analyticsConfigured) {\r\n\t\t\t\tsendEvents();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t}\r\n};\r\n\r\nconst sendEvents = () => {\r\n\tconst config = Analytics.configure();\r\n\tif (!endpointUpdated && config['autoSessionRecord']) {\r\n\t\tAnalytics.updateEndpoint({ immediate: true }).catch(e => {\r\n\t\t\tlogger.debug('Failed to update the endpoint', e);\r\n\t\t});\r\n\t\tendpointUpdated = true;\r\n\t}\r\n\tAnalytics.autoTrack('session', {\r\n\t\tenable: config['autoSessionRecord'],\r\n\t});\r\n};\r\n\r\nHub.listen('auth', listener);\r\nHub.listen('storage', listener);\r\nHub.listen('analytics', listener);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}