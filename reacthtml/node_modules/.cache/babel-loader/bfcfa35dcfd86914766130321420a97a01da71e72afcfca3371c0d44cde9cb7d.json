{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nimport * as Cookies from 'js-cookie';\n\n/** @class */\n\nvar CookieStorage = function () {\n  /**\n   * Constructs a new CookieStorage object\n   * @param {object} data Creation options.\n   * @param {string} data.domain Cookies domain (mandatory).\n   * @param {string} data.path Cookies path (default: '/')\n   * @param {integer} data.expires Cookie expiration (in days, default: 365)\n   * @param {boolean} data.secure Cookie secure flag (default: true)\n   */\n  function CookieStorage(data) {\n    _classCallCheck(this, CookieStorage);\n    if (data.domain) {\n      this.domain = data.domain;\n    } else {\n      throw new Error('The domain of cookieStorage can not be undefined.');\n    }\n    if (data.path) {\n      this.path = data.path;\n    } else {\n      this.path = '/';\n    }\n    if (Object.prototype.hasOwnProperty.call(data, 'expires')) {\n      this.expires = data.expires;\n    } else {\n      this.expires = 365;\n    }\n    if (Object.prototype.hasOwnProperty.call(data, 'secure')) {\n      this.secure = data.secure;\n    } else {\n      this.secure = true;\n    }\n  }\n\n  /**\n   * This is used to set a specific item in storage\n   * @param {string} key - the key for the item\n   * @param {object} value - the value\n   * @returns {string} value that was set\n   */\n\n  CookieStorage.prototype.setItem = function setItem(key, value) {\n    Cookies.set(key, value, {\n      path: this.path,\n      expires: this.expires,\n      domain: this.domain,\n      secure: this.secure\n    });\n    return Cookies.get(key);\n  };\n\n  /**\n   * This is used to get a specific key from storage\n   * @param {string} key - the key for the item\n   * This is used to clear the storage\n   * @returns {string} the data item\n   */\n\n  CookieStorage.prototype.getItem = function getItem(key) {\n    return Cookies.get(key);\n  };\n\n  /**\n   * This is used to remove an item from storage\n   * @param {string} key - the key being set\n   * @returns {string} value - value that was deleted\n   */\n\n  CookieStorage.prototype.removeItem = function removeItem(key) {\n    return Cookies.remove(key, {\n      path: this.path,\n      domain: this.domain,\n      secure: this.secure\n    });\n  };\n\n  /**\n   * This is used to clear the storage\n   * @returns {string} nothing\n   */\n\n  CookieStorage.prototype.clear = function clear() {\n    var cookies = Cookies.get();\n    var index = void 0;\n    for (index = 0; index < cookies.length; ++index) {\n      Cookies.remove(cookies[index]);\n    }\n    return {};\n  };\n  return CookieStorage;\n}();\nexport default CookieStorage;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","Cookies","CookieStorage","data","domain","Error","path","Object","prototype","hasOwnProperty","call","expires","secure","setItem","key","value","set","get","getItem","removeItem","remove","clear","cookies","index","length"],"sources":["C:/Study/6805/React/reacthtml/node_modules/amazon-cognito-identity-js/es/CookieStorage.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport * as Cookies from 'js-cookie';\n\n/** @class */\n\nvar CookieStorage = function () {\n\t/**\n  * Constructs a new CookieStorage object\n  * @param {object} data Creation options.\n  * @param {string} data.domain Cookies domain (mandatory).\n  * @param {string} data.path Cookies path (default: '/')\n  * @param {integer} data.expires Cookie expiration (in days, default: 365)\n  * @param {boolean} data.secure Cookie secure flag (default: true)\n  */\n\tfunction CookieStorage(data) {\n\t\t_classCallCheck(this, CookieStorage);\n\n\t\tif (data.domain) {\n\t\t\tthis.domain = data.domain;\n\t\t} else {\n\t\t\tthrow new Error('The domain of cookieStorage can not be undefined.');\n\t\t}\n\t\tif (data.path) {\n\t\t\tthis.path = data.path;\n\t\t} else {\n\t\t\tthis.path = '/';\n\t\t}\n\t\tif (Object.prototype.hasOwnProperty.call(data, 'expires')) {\n\t\t\tthis.expires = data.expires;\n\t\t} else {\n\t\t\tthis.expires = 365;\n\t\t}\n\t\tif (Object.prototype.hasOwnProperty.call(data, 'secure')) {\n\t\t\tthis.secure = data.secure;\n\t\t} else {\n\t\t\tthis.secure = true;\n\t\t}\n\t}\n\n\t/**\n  * This is used to set a specific item in storage\n  * @param {string} key - the key for the item\n  * @param {object} value - the value\n  * @returns {string} value that was set\n  */\n\n\n\tCookieStorage.prototype.setItem = function setItem(key, value) {\n\t\tCookies.set(key, value, {\n\t\t\tpath: this.path,\n\t\t\texpires: this.expires,\n\t\t\tdomain: this.domain,\n\t\t\tsecure: this.secure\n\t\t});\n\t\treturn Cookies.get(key);\n\t};\n\n\t/**\n  * This is used to get a specific key from storage\n  * @param {string} key - the key for the item\n  * This is used to clear the storage\n  * @returns {string} the data item\n  */\n\n\n\tCookieStorage.prototype.getItem = function getItem(key) {\n\t\treturn Cookies.get(key);\n\t};\n\n\t/**\n  * This is used to remove an item from storage\n  * @param {string} key - the key being set\n  * @returns {string} value - value that was deleted\n  */\n\n\n\tCookieStorage.prototype.removeItem = function removeItem(key) {\n\t\treturn Cookies.remove(key, {\n\t\t\tpath: this.path,\n\t\t\tdomain: this.domain,\n\t\t\tsecure: this.secure\n\t\t});\n\t};\n\n\t/**\n  * This is used to clear the storage\n  * @returns {string} nothing\n  */\n\n\n\tCookieStorage.prototype.clear = function clear() {\n\t\tvar cookies = Cookies.get();\n\t\tvar index = void 0;\n\t\tfor (index = 0; index < cookies.length; ++index) {\n\t\t\tCookies.remove(cookies[index]);\n\t\t}\n\t\treturn {};\n\t};\n\n\treturn CookieStorage;\n}();\n\nexport default CookieStorage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}