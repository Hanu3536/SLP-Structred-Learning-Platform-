{"ast":null,"code":"import { ConsoleLogger as Logger } from './Logger';\nvar logger = new Logger('Parser');\nvar Parser = /** @class */function () {\n  function Parser() {}\n  Parser.parseMobilehubConfig = function (config) {\n    var amplifyConfig = {};\n    // Analytics\n    if (config['aws_mobile_analytics_app_id']) {\n      var Analytics = {\n        AWSPinpoint: {\n          appId: config['aws_mobile_analytics_app_id'],\n          region: config['aws_mobile_analytics_app_region']\n        }\n      };\n      amplifyConfig.Analytics = Analytics;\n    }\n    // Auth\n    if (config['aws_cognito_identity_pool_id'] || config['aws_user_pools_id']) {\n      var Auth = {\n        userPoolId: config['aws_user_pools_id'],\n        userPoolWebClientId: config['aws_user_pools_web_client_id'],\n        region: config['aws_cognito_region'],\n        identityPoolId: config['aws_cognito_identity_pool_id'],\n        mandatorySignIn: config['aws_mandatory_sign_in'] === 'enable' ? true : false\n      };\n      amplifyConfig.Auth = Auth;\n    }\n    // Storage\n    var storageConfig;\n    if (config['aws_user_files_s3_bucket']) {\n      storageConfig = {\n        AWSS3: {\n          bucket: config['aws_user_files_s3_bucket'],\n          region: config['aws_user_files_s3_bucket_region'],\n          dangerouslyConnectToHttpEndpointForTesting: config['aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing']\n        }\n      };\n    } else {\n      storageConfig = config ? config.Storage || config : {};\n    }\n    amplifyConfig.Analytics = Object.assign({}, amplifyConfig.Analytics, config.Analytics);\n    amplifyConfig.Auth = Object.assign({}, amplifyConfig.Auth, config.Auth);\n    amplifyConfig.Storage = Object.assign({}, storageConfig);\n    logger.debug('parse config', config, 'to amplifyconfig', amplifyConfig);\n    return amplifyConfig;\n  };\n  return Parser;\n}();\nexport default Parser;","map":{"version":3,"names":["ConsoleLogger","Logger","logger","Parser","parseMobilehubConfig","config","amplifyConfig","Analytics","AWSPinpoint","appId","region","Auth","userPoolId","userPoolWebClientId","identityPoolId","mandatorySignIn","storageConfig","AWSS3","bucket","dangerouslyConnectToHttpEndpointForTesting","Storage","Object","assign","debug"],"sources":["C:\\Study\\6805\\React\\reacthtml\\node_modules\\@aws-amplify\\core\\src\\Parser.ts"],"sourcesContent":["import { AmplifyConfig } from './types';\nimport { ConsoleLogger as Logger } from './Logger';\n\nconst logger = new Logger('Parser');\n\nexport default class Parser {\n\tstatic parseMobilehubConfig(config): AmplifyConfig {\n\t\tconst amplifyConfig: AmplifyConfig = {};\n\t\t// Analytics\n\t\tif (config['aws_mobile_analytics_app_id']) {\n\t\t\tconst Analytics = {\n\t\t\t\tAWSPinpoint: {\n\t\t\t\t\tappId: config['aws_mobile_analytics_app_id'],\n\t\t\t\t\tregion: config['aws_mobile_analytics_app_region'],\n\t\t\t\t},\n\t\t\t};\n\t\t\tamplifyConfig.Analytics = Analytics;\n\t\t}\n\n\t\t// Auth\n\t\tif (config['aws_cognito_identity_pool_id'] || config['aws_user_pools_id']) {\n\t\t\tconst Auth = {\n\t\t\t\tuserPoolId: config['aws_user_pools_id'],\n\t\t\t\tuserPoolWebClientId: config['aws_user_pools_web_client_id'],\n\t\t\t\tregion: config['aws_cognito_region'],\n\t\t\t\tidentityPoolId: config['aws_cognito_identity_pool_id'],\n\t\t\t\tmandatorySignIn:\n\t\t\t\t\tconfig['aws_mandatory_sign_in'] === 'enable' ? true : false,\n\t\t\t};\n\t\t\tamplifyConfig.Auth = Auth;\n\t\t}\n\n\t\t// Storage\n\t\tlet storageConfig;\n\t\tif (config['aws_user_files_s3_bucket']) {\n\t\t\tstorageConfig = {\n\t\t\t\tAWSS3: {\n\t\t\t\t\tbucket: config['aws_user_files_s3_bucket'],\n\t\t\t\t\tregion: config['aws_user_files_s3_bucket_region'],\n\t\t\t\t\tdangerouslyConnectToHttpEndpointForTesting:\n\t\t\t\t\t\tconfig[\n\t\t\t\t\t\t\t'aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing'\n\t\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t};\n\t\t} else {\n\t\t\tstorageConfig = config ? config.Storage || config : {};\n\t\t}\n\t\tamplifyConfig.Analytics = Object.assign(\n\t\t\t{},\n\t\t\tamplifyConfig.Analytics,\n\t\t\tconfig.Analytics\n\t\t);\n\t\tamplifyConfig.Auth = Object.assign({}, amplifyConfig.Auth, config.Auth);\n\t\tamplifyConfig.Storage = Object.assign({}, storageConfig);\n\t\tlogger.debug('parse config', config, 'to amplifyconfig', amplifyConfig);\n\t\treturn amplifyConfig;\n\t}\n}\n"],"mappings":"AACA,SAASA,aAAa,IAAIC,MAAM,QAAQ,UAAU;AAElD,IAAMC,MAAM,GAAG,IAAID,MAAM,CAAC,QAAQ,CAAC;AAEnC,IAAAE,MAAA;EAAA,SAAAA,OAAA,GAqDA;EApDQA,MAAA,CAAAC,oBAAoB,GAA3B,UAA4BC,MAAM;IACjC,IAAMC,aAAa,GAAkB,EAAE;IACvC;IACA,IAAID,MAAM,CAAC,6BAA6B,CAAC,EAAE;MAC1C,IAAME,SAAS,GAAG;QACjBC,WAAW,EAAE;UACZC,KAAK,EAAEJ,MAAM,CAAC,6BAA6B,CAAC;UAC5CK,MAAM,EAAEL,MAAM,CAAC,iCAAiC;;OAEjD;MACDC,aAAa,CAACC,SAAS,GAAGA,SAAS;;IAGpC;IACA,IAAIF,MAAM,CAAC,8BAA8B,CAAC,IAAIA,MAAM,CAAC,mBAAmB,CAAC,EAAE;MAC1E,IAAMM,IAAI,GAAG;QACZC,UAAU,EAAEP,MAAM,CAAC,mBAAmB,CAAC;QACvCQ,mBAAmB,EAAER,MAAM,CAAC,8BAA8B,CAAC;QAC3DK,MAAM,EAAEL,MAAM,CAAC,oBAAoB,CAAC;QACpCS,cAAc,EAAET,MAAM,CAAC,8BAA8B,CAAC;QACtDU,eAAe,EACdV,MAAM,CAAC,uBAAuB,CAAC,KAAK,QAAQ,GAAG,IAAI,GAAG;OACvD;MACDC,aAAa,CAACK,IAAI,GAAGA,IAAI;;IAG1B;IACA,IAAIK,aAAa;IACjB,IAAIX,MAAM,CAAC,0BAA0B,CAAC,EAAE;MACvCW,aAAa,GAAG;QACfC,KAAK,EAAE;UACNC,MAAM,EAAEb,MAAM,CAAC,0BAA0B,CAAC;UAC1CK,MAAM,EAAEL,MAAM,CAAC,iCAAiC,CAAC;UACjDc,0CAA0C,EACzCd,MAAM,CACL,oEAAoE;;OAGvE;KACD,MAAM;MACNW,aAAa,GAAGX,MAAM,GAAGA,MAAM,CAACe,OAAO,IAAIf,MAAM,GAAG,EAAE;;IAEvDC,aAAa,CAACC,SAAS,GAAGc,MAAM,CAACC,MAAM,CACtC,EAAE,EACFhB,aAAa,CAACC,SAAS,EACvBF,MAAM,CAACE,SAAS,CAChB;IACDD,aAAa,CAACK,IAAI,GAAGU,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEhB,aAAa,CAACK,IAAI,EAAEN,MAAM,CAACM,IAAI,CAAC;IACvEL,aAAa,CAACc,OAAO,GAAGC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEN,aAAa,CAAC;IACxDd,MAAM,CAACqB,KAAK,CAAC,cAAc,EAAElB,MAAM,EAAE,kBAAkB,EAAEC,aAAa,CAAC;IACvE,OAAOA,aAAa;EACrB,CAAC;EACF,OAAAH,MAAC;AAAD,CAAC,CArDD"},"metadata":{},"sourceType":"module","externalDependencies":[]}