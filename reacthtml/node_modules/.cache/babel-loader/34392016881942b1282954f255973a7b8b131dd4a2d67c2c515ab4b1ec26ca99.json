{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar util_hex_encoding_1 = require(\"@aws-sdk/util-hex-encoding\");\nvar Int64_1 = require(\"./Int64\");\n/**\n * @internal\n */\nvar HeaderMarshaller = /** @class */function () {\n  function HeaderMarshaller(toUtf8, fromUtf8) {\n    this.toUtf8 = toUtf8;\n    this.fromUtf8 = fromUtf8;\n  }\n  HeaderMarshaller.prototype.format = function (headers) {\n    var e_1, _a, e_2, _b;\n    var chunks = [];\n    try {\n      for (var _c = tslib_1.__values(Object.keys(headers)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var headerName = _d.value;\n        var bytes = this.fromUtf8(headerName);\n        chunks.push(Uint8Array.from([bytes.byteLength]), bytes, this.formatHeaderValue(headers[headerName]));\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    var out = new Uint8Array(chunks.reduce(function (carry, bytes) {\n      return carry + bytes.byteLength;\n    }, 0));\n    var position = 0;\n    try {\n      for (var chunks_1 = tslib_1.__values(chunks), chunks_1_1 = chunks_1.next(); !chunks_1_1.done; chunks_1_1 = chunks_1.next()) {\n        var chunk = chunks_1_1.value;\n        out.set(chunk, position);\n        position += chunk.byteLength;\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (chunks_1_1 && !chunks_1_1.done && (_b = chunks_1.return)) _b.call(chunks_1);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n    return out;\n  };\n  HeaderMarshaller.prototype.formatHeaderValue = function (header) {\n    switch (header.type) {\n      case 'boolean':\n        return Uint8Array.from([header.value ? 0 /* boolTrue */ : 1 /* boolFalse */]);\n\n      case 'byte':\n        return Uint8Array.from([2 /* byte */, header.value]);\n      case 'short':\n        var shortView = new DataView(new ArrayBuffer(3));\n        shortView.setUint8(0, 3 /* short */);\n        shortView.setInt16(1, header.value, false);\n        return new Uint8Array(shortView.buffer);\n      case 'integer':\n        var intView = new DataView(new ArrayBuffer(5));\n        intView.setUint8(0, 4 /* integer */);\n        intView.setInt32(1, header.value, false);\n        return new Uint8Array(intView.buffer);\n      case 'long':\n        var longBytes = new Uint8Array(9);\n        longBytes[0] = 5 /* long */;\n        longBytes.set(header.value.bytes, 1);\n        return longBytes;\n      case 'binary':\n        var binView = new DataView(new ArrayBuffer(3 + header.value.byteLength));\n        binView.setUint8(0, 6 /* byteArray */);\n        binView.setUint16(1, header.value.byteLength, false);\n        var binBytes = new Uint8Array(binView.buffer);\n        binBytes.set(header.value, 3);\n        return binBytes;\n      case 'string':\n        var utf8Bytes = this.fromUtf8(header.value);\n        var strView = new DataView(new ArrayBuffer(3 + utf8Bytes.byteLength));\n        strView.setUint8(0, 7 /* string */);\n        strView.setUint16(1, utf8Bytes.byteLength, false);\n        var strBytes = new Uint8Array(strView.buffer);\n        strBytes.set(utf8Bytes, 3);\n        return strBytes;\n      case 'timestamp':\n        var tsBytes = new Uint8Array(9);\n        tsBytes[0] = 8 /* timestamp */;\n        tsBytes.set(Int64_1.Int64.fromNumber(header.value.valueOf()).bytes, 1);\n        return tsBytes;\n      case 'uuid':\n        if (!UUID_PATTERN.test(header.value)) {\n          throw new Error(\"Invalid UUID received: \" + header.value);\n        }\n        var uuidBytes = new Uint8Array(17);\n        uuidBytes[0] = 9 /* uuid */;\n        uuidBytes.set(util_hex_encoding_1.fromHex(header.value.replace(/\\-/g, '')), 1);\n        return uuidBytes;\n    }\n  };\n  HeaderMarshaller.prototype.parse = function (headers) {\n    var out = {};\n    var position = 0;\n    while (position < headers.byteLength) {\n      var nameLength = headers.getUint8(position++);\n      var name = this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, nameLength));\n      position += nameLength;\n      switch (headers.getUint8(position++)) {\n        case 0 /* boolTrue */:\n          out[name] = {\n            type: BOOLEAN_TAG,\n            value: true\n          };\n          break;\n        case 1 /* boolFalse */:\n          out[name] = {\n            type: BOOLEAN_TAG,\n            value: false\n          };\n          break;\n        case 2 /* byte */:\n          out[name] = {\n            type: BYTE_TAG,\n            value: headers.getInt8(position++)\n          };\n          break;\n        case 3 /* short */:\n          out[name] = {\n            type: SHORT_TAG,\n            value: headers.getInt16(position, false)\n          };\n          position += 2;\n          break;\n        case 4 /* integer */:\n          out[name] = {\n            type: INT_TAG,\n            value: headers.getInt32(position, false)\n          };\n          position += 4;\n          break;\n        case 5 /* long */:\n          out[name] = {\n            type: LONG_TAG,\n            value: new Int64_1.Int64(new Uint8Array(headers.buffer, headers.byteOffset + position, 8))\n          };\n          position += 8;\n          break;\n        case 6 /* byteArray */:\n          var binaryLength = headers.getUint16(position, false);\n          position += 2;\n          out[name] = {\n            type: BINARY_TAG,\n            value: new Uint8Array(headers.buffer, headers.byteOffset + position, binaryLength)\n          };\n          position += binaryLength;\n          break;\n        case 7 /* string */:\n          var stringLength = headers.getUint16(position, false);\n          position += 2;\n          out[name] = {\n            type: STRING_TAG,\n            value: this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, stringLength))\n          };\n          position += stringLength;\n          break;\n        case 8 /* timestamp */:\n          out[name] = {\n            type: TIMESTAMP_TAG,\n            value: new Date(new Int64_1.Int64(new Uint8Array(headers.buffer, headers.byteOffset + position, 8)).valueOf())\n          };\n          position += 8;\n          break;\n        case 9 /* uuid */:\n          var uuidBytes = new Uint8Array(headers.buffer, headers.byteOffset + position, 16);\n          position += 16;\n          out[name] = {\n            type: UUID_TAG,\n            value: util_hex_encoding_1.toHex(uuidBytes.subarray(0, 4)) + \"-\" + util_hex_encoding_1.toHex(uuidBytes.subarray(4, 6)) + \"-\" + util_hex_encoding_1.toHex(uuidBytes.subarray(6, 8)) + \"-\" + util_hex_encoding_1.toHex(uuidBytes.subarray(8, 10)) + \"-\" + util_hex_encoding_1.toHex(uuidBytes.subarray(10))\n          };\n          break;\n        default:\n          throw new Error(\"Unrecognized header type tag\");\n      }\n    }\n    return out;\n  };\n  return HeaderMarshaller;\n}();\nexports.HeaderMarshaller = HeaderMarshaller;\n;\nvar BOOLEAN_TAG = 'boolean';\nvar BYTE_TAG = 'byte';\nvar SHORT_TAG = 'short';\nvar INT_TAG = 'integer';\nvar LONG_TAG = 'long';\nvar BINARY_TAG = 'binary';\nvar STRING_TAG = 'string';\nvar TIMESTAMP_TAG = 'timestamp';\nvar UUID_TAG = 'uuid';\nvar UUID_PATTERN = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;","map":{"version":3,"names":["util_hex_encoding_1","require","Int64_1","HeaderMarshaller","toUtf8","fromUtf8","prototype","format","headers","chunks","_c","tslib_1","__values","Object","keys","_d","next","done","headerName","value","bytes","push","Uint8Array","from","byteLength","formatHeaderValue","out","reduce","carry","position","chunks_1","chunks_1_1","chunk","set","header","type","shortView","DataView","ArrayBuffer","setUint8","setInt16","buffer","intView","setInt32","longBytes","binView","setUint16","binBytes","utf8Bytes","strView","strBytes","tsBytes","Int64","fromNumber","valueOf","UUID_PATTERN","test","Error","uuidBytes","fromHex","replace","parse","nameLength","getUint8","name","byteOffset","BOOLEAN_TAG","BYTE_TAG","getInt8","SHORT_TAG","getInt16","INT_TAG","getInt32","LONG_TAG","binaryLength","getUint16","BINARY_TAG","stringLength","STRING_TAG","TIMESTAMP_TAG","Date","UUID_TAG","toHex","subarray","exports"],"sources":["../src/HeaderMarshaller.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}