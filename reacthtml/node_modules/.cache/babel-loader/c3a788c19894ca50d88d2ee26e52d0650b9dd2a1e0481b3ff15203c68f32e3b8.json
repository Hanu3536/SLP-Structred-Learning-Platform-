{"ast":null,"code":"/*\n * Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('AuthError');\nvar DEFAULT_MSG = 'Authentication Error';\nvar AuthError = /** @class */function (_super) {\n  __extends(AuthError, _super);\n  function AuthError(type) {\n    var _this = this;\n    var _a = authErrorMessages[type],\n      message = _a.message,\n      log = _a.log;\n    _this = _super.call(this, message) || this;\n    // Hack for making the custom error class work when transpiled to es5\n    // TODO: Delete the following 2 lines after we change the build target to >= es2015\n    _this.constructor = AuthError;\n    Object.setPrototypeOf(_this, AuthError.prototype);\n    _this.name = 'AuthError';\n    _this.log = log || message;\n    logger.error(_this.log);\n    return _this;\n  }\n  return AuthError;\n}(Error);\nexport { AuthError };\nvar NoUserPoolError = /** @class */function (_super) {\n  __extends(NoUserPoolError, _super);\n  function NoUserPoolError(type) {\n    var _this = _super.call(this, type) || this;\n    // Hack for making the custom error class work when transpiled to es5\n    // TODO: Delete the following 2 lines after we change the build target to >= es2015\n    _this.constructor = NoUserPoolError;\n    Object.setPrototypeOf(_this, NoUserPoolError.prototype);\n    _this.name = 'NoUserPoolError';\n    return _this;\n  }\n  return NoUserPoolError;\n}(AuthError);\nexport { NoUserPoolError };\nexport var authErrorMessages = {\n  noConfig: {\n    message: DEFAULT_MSG,\n    log: \"\\n            Error: Amplify has not been configured correctly.\\n            This error is typically caused by one of the following scenarios:\\n\\n            1. Make sure you're passing the awsconfig object to Amplify.configure() in your app's entry point\\n                See https://aws-amplify.github.io/docs/js/authentication#configure-your-app for more information\\n            \\n            2. There might be multiple conflicting versions of aws-amplify or amplify packages in your node_modules.\\n                Try deleting your node_modules folder and reinstalling the dependencies with `yarn install`\\n        \"\n  },\n  missingAuthConfig: {\n    message: DEFAULT_MSG,\n    log: \"\\n            Error: Amplify has not been configured correctly. \\n            The configuration object is missing required auth properties. \\n            Did you run `amplify push` after adding auth via `amplify add auth`?\\n            See https://aws-amplify.github.io/docs/js/authentication#amplify-project-setup for more information\\n        \"\n  },\n  emptyUsername: {\n    message: 'Username cannot be empty'\n  },\n  // TODO: should include a list of valid sign-in types\n  invalidUsername: {\n    message: 'The username should either be a string or one of the sign in types'\n  },\n  emptyPassword: {\n    message: 'Password cannot be empty'\n  },\n  emptyCode: {\n    message: 'Confirmation code cannot be empty'\n  },\n  signUpError: {\n    message: 'Error creating account',\n    log: 'The first parameter should either be non-null string or object'\n  },\n  noMFA: {\n    message: 'No valid MFA method provided'\n  },\n  invalidMFA: {\n    message: 'Invalid MFA type'\n  },\n  emptyChallengeResponse: {\n    message: 'Challenge response cannot be empty'\n  },\n  noUserSession: {\n    message: 'Failed to get the session because the user is empty'\n  },\n  default: {\n    message: DEFAULT_MSG\n  }\n};","map":{"version":3,"names":["ConsoleLogger","Logger","logger","DEFAULT_MSG","AuthError","_super","__extends","type","_this","_a","authErrorMessages","message","log","call","constructor","Object","setPrototypeOf","prototype","name","error","Error","NoUserPoolError","noConfig","missingAuthConfig","emptyUsername","invalidUsername","emptyPassword","emptyCode","signUpError","noMFA","invalidMFA","emptyChallengeResponse","noUserSession","default"],"sources":["C:\\Study\\6805\\React\\reacthtml\\node_modules\\@aws-amplify\\auth\\src\\Errors.ts"],"sourcesContent":["/*\n * Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { AuthErrorMessages, AuthErrorTypes } from './types';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\n\nconst logger = new Logger('AuthError');\nconst DEFAULT_MSG = 'Authentication Error';\n\nexport class AuthError extends Error {\n\tpublic log: string;\n\tconstructor(type: AuthErrorTypes) {\n\t\tconst { message, log } = authErrorMessages[type];\n\t\tsuper(message);\n\n\t\t// Hack for making the custom error class work when transpiled to es5\n\t\t// TODO: Delete the following 2 lines after we change the build target to >= es2015\n\t\tthis.constructor = AuthError;\n\t\tObject.setPrototypeOf(this, AuthError.prototype);\n\n\t\tthis.name = 'AuthError';\n\t\tthis.log = log || message;\n\n\t\tlogger.error(this.log);\n\t}\n}\n\nexport class NoUserPoolError extends AuthError {\n\tconstructor(type: AuthErrorTypes) {\n\t\tsuper(type);\n\n\t\t// Hack for making the custom error class work when transpiled to es5\n\t\t// TODO: Delete the following 2 lines after we change the build target to >= es2015\n\t\tthis.constructor = NoUserPoolError;\n\t\tObject.setPrototypeOf(this, NoUserPoolError.prototype);\n\n\t\tthis.name = 'NoUserPoolError';\n\t}\n}\n\nexport const authErrorMessages: AuthErrorMessages = {\n\tnoConfig: {\n\t\tmessage: DEFAULT_MSG,\n\t\tlog: `\n            Error: Amplify has not been configured correctly.\n            This error is typically caused by one of the following scenarios:\n\n            1. Make sure you're passing the awsconfig object to Amplify.configure() in your app's entry point\n                See https://aws-amplify.github.io/docs/js/authentication#configure-your-app for more information\n            \n            2. There might be multiple conflicting versions of aws-amplify or amplify packages in your node_modules.\n                Try deleting your node_modules folder and reinstalling the dependencies with \\`yarn install\\`\n        `,\n\t},\n\tmissingAuthConfig: {\n\t\tmessage: DEFAULT_MSG,\n\t\tlog: `\n            Error: Amplify has not been configured correctly. \n            The configuration object is missing required auth properties. \n            Did you run \\`amplify push\\` after adding auth via \\`amplify add auth\\`?\n            See https://aws-amplify.github.io/docs/js/authentication#amplify-project-setup for more information\n        `,\n\t},\n\temptyUsername: {\n\t\tmessage: 'Username cannot be empty',\n\t},\n\t// TODO: should include a list of valid sign-in types\n\tinvalidUsername: {\n\t\tmessage:\n\t\t\t'The username should either be a string or one of the sign in types',\n\t},\n\temptyPassword: {\n\t\tmessage: 'Password cannot be empty',\n\t},\n\temptyCode: {\n\t\tmessage: 'Confirmation code cannot be empty',\n\t},\n\tsignUpError: {\n\t\tmessage: 'Error creating account',\n\t\tlog: 'The first parameter should either be non-null string or object',\n\t},\n\tnoMFA: {\n\t\tmessage: 'No valid MFA method provided',\n\t},\n\tinvalidMFA: {\n\t\tmessage: 'Invalid MFA type',\n\t},\n\temptyChallengeResponse: {\n\t\tmessage: 'Challenge response cannot be empty',\n\t},\n\tnoUserSession: {\n\t\tmessage: 'Failed to get the session because the user is empty',\n\t},\n\tdefault: {\n\t\tmessage: DEFAULT_MSG,\n\t},\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcA,SAASA,aAAa,IAAIC,MAAM,QAAQ,mBAAmB;AAE3D,IAAMC,MAAM,GAAG,IAAID,MAAM,CAAC,WAAW,CAAC;AACtC,IAAME,WAAW,GAAG,sBAAsB;AAE1C,IAAAC,SAAA,0BAAAC,MAAA;EAA+BC,SAAA,CAAAF,SAAA,EAAAC,MAAA;EAE9B,SAAAD,UAAYG,IAAoB;IAAhC,IAAAC,KAAA;IACO,IAAAC,EAAA,GAAAC,iBAAA,CAAAH,IAAA,CAA0C;MAAxCI,OAAA,GAAAF,EAAA,CAAAE,OAAO;MAAEC,GAAA,GAAAH,EAAA,CAAAG,GAA+B;IAChDJ,KAAA,GAAAH,MAAA,CAAAQ,IAAA,OAAMF,OAAO,CAAC;IAEd;IACA;IACAH,KAAI,CAACM,WAAW,GAAGV,SAAS;IAC5BW,MAAM,CAACC,cAAc,CAACR,KAAI,EAAEJ,SAAS,CAACa,SAAS,CAAC;IAEhDT,KAAI,CAACU,IAAI,GAAG,WAAW;IACvBV,KAAI,CAACI,GAAG,GAAGA,GAAG,IAAID,OAAO;IAEzBT,MAAM,CAACiB,KAAK,CAACX,KAAI,CAACI,GAAG,CAAC;;EACvB;EACD,OAAAR,SAAC;AAAD,CAAC,CAhB8BgB,KAAK;;AAkBpC,IAAAC,eAAA,0BAAAhB,MAAA;EAAqCC,SAAA,CAAAe,eAAA,EAAAhB,MAAA;EACpC,SAAAgB,gBAAYd,IAAoB;IAAhC,IAAAC,KAAA,GACCH,MAAA,CAAAQ,IAAA,OAAMN,IAAI,CAAC;IAEX;IACA;IACAC,KAAI,CAACM,WAAW,GAAGO,eAAe;IAClCN,MAAM,CAACC,cAAc,CAACR,KAAI,EAAEa,eAAe,CAACJ,SAAS,CAAC;IAEtDT,KAAI,CAACU,IAAI,GAAG,iBAAiB;;EAC9B;EACD,OAAAG,eAAC;AAAD,CAAC,CAXoCjB,SAAS;;AAa9C,OAAO,IAAMM,iBAAiB,GAAsB;EACnDY,QAAQ,EAAE;IACTX,OAAO,EAAER,WAAW;IACpBS,GAAG,EAAE;GAUL;EACDW,iBAAiB,EAAE;IAClBZ,OAAO,EAAER,WAAW;IACpBS,GAAG,EAAE;GAML;EACDY,aAAa,EAAE;IACdb,OAAO,EAAE;GACT;EACD;EACAc,eAAe,EAAE;IAChBd,OAAO,EACN;GACD;EACDe,aAAa,EAAE;IACdf,OAAO,EAAE;GACT;EACDgB,SAAS,EAAE;IACVhB,OAAO,EAAE;GACT;EACDiB,WAAW,EAAE;IACZjB,OAAO,EAAE,wBAAwB;IACjCC,GAAG,EAAE;GACL;EACDiB,KAAK,EAAE;IACNlB,OAAO,EAAE;GACT;EACDmB,UAAU,EAAE;IACXnB,OAAO,EAAE;GACT;EACDoB,sBAAsB,EAAE;IACvBpB,OAAO,EAAE;GACT;EACDqB,aAAa,EAAE;IACdrB,OAAO,EAAE;GACT;EACDsB,OAAO,EAAE;IACRtB,OAAO,EAAER;;CAEV"},"metadata":{},"sourceType":"module","externalDependencies":[]}