{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar HeaderMarshaller_1 = require(\"./HeaderMarshaller\");\nvar splitMessage_1 = require(\"./splitMessage\");\nvar crc32_1 = require(\"@aws-crypto/crc32\");\n/**\n * A marshaller that can convert binary-packed event stream messages into\n * JavaScript objects and back again into their binary format.\n */\nvar EventStreamMarshaller = /** @class */function () {\n  function EventStreamMarshaller(toUtf8, fromUtf8) {\n    this.headerMarshaller = new HeaderMarshaller_1.HeaderMarshaller(toUtf8, fromUtf8);\n  }\n  /**\n   * Convert a structured JavaScript object with tagged headers into a binary\n   * event stream message.\n   */\n  EventStreamMarshaller.prototype.marshall = function (_a) {\n    var rawHeaders = _a.headers,\n      body = _a.body;\n    var headers = this.headerMarshaller.format(rawHeaders);\n    var length = headers.byteLength + body.byteLength + 16;\n    var out = new Uint8Array(length);\n    var view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    var checksum = new crc32_1.Crc32();\n    // Format message\n    view.setUint32(0, length, false);\n    view.setUint32(4, headers.byteLength, false);\n    view.setUint32(8, checksum.update(out.subarray(0, 8)).digest(), false);\n    out.set(headers, 12);\n    out.set(body, headers.byteLength + 12);\n    // Write trailing message checksum\n    view.setUint32(length - 4, checksum.update(out.subarray(8, length - 4)).digest(), false);\n    return out;\n  };\n  /**\n   * Convert a binary event stream message into a JavaScript object with an\n   * opaque, binary body and tagged, parsed headers.\n   */\n  EventStreamMarshaller.prototype.unmarshall = function (message) {\n    var _a = splitMessage_1.splitMessage(message),\n      headers = _a.headers,\n      body = _a.body;\n    return {\n      headers: this.headerMarshaller.parse(headers),\n      body: body\n    };\n  };\n  return EventStreamMarshaller;\n}();\nexports.EventStreamMarshaller = EventStreamMarshaller;","map":{"version":3,"names":["HeaderMarshaller_1","require","splitMessage_1","crc32_1","EventStreamMarshaller","toUtf8","fromUtf8","headerMarshaller","HeaderMarshaller","prototype","marshall","_a","rawHeaders","headers","body","format","length","byteLength","out","Uint8Array","view","DataView","buffer","byteOffset","checksum","Crc32","setUint32","update","subarray","digest","set","unmarshall","message","splitMessage","parse","exports"],"sources":["../src/EventStreamMarshaller.ts"],"sourcesContent":[null],"mappings":";;;;;AAAA,IAAAA,kBAAA,GAAAC,OAAA;AAEA,IAAAC,cAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AAIA;;;;AAIA,IAAAG,qBAAA;EAGI,SAAAA,sBAAYC,MAAe,EAAEC,QAAiB;IAC1C,IAAI,CAACC,gBAAgB,GAAG,IAAIP,kBAAA,CAAAQ,gBAAgB,CAACH,MAAM,EAAEC,QAAQ,CAAC;EAClE;EAEA;;;;EAIAF,qBAAA,CAAAK,SAAA,CAAAC,QAAQ,GAAR,UAASC,EAAsC;QAApCC,UAAA,GAAAD,EAAA,CAAAE,OAAmB;MAAEC,IAAA,GAAAH,EAAA,CAAAG,IAAI;IAChC,IAAMD,OAAO,GAAG,IAAI,CAACN,gBAAgB,CAACQ,MAAM,CAACH,UAAU,CAAC;IACxD,IAAMI,MAAM,GAAGH,OAAO,CAACI,UAAU,GAAGH,IAAI,CAACG,UAAU,GAAG,EAAE;IAExD,IAAMC,GAAG,GAAG,IAAIC,UAAU,CAACH,MAAM,CAAC;IAClC,IAAMI,IAAI,GAAG,IAAIC,QAAQ,CAACH,GAAG,CAACI,MAAM,EAAEJ,GAAG,CAACK,UAAU,EAAEL,GAAG,CAACD,UAAU,CAAC;IACrE,IAAMO,QAAQ,GAAG,IAAIrB,OAAA,CAAAsB,KAAK,CAAL,CAAK;IAE1B;IACAL,IAAI,CAACM,SAAS,CAAC,CAAC,EAAEV,MAAM,EAAE,KAAK,CAAC;IAChCI,IAAI,CAACM,SAAS,CAAC,CAAC,EAAEb,OAAO,CAACI,UAAU,EAAE,KAAK,CAAC;IAC5CG,IAAI,CAACM,SAAS,CAAC,CAAC,EAAEF,QAAQ,CAACG,MAAM,CAACT,GAAG,CAACU,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,MAAM,EAAE,EAAE,KAAK,CAAC;IACtEX,GAAG,CAACY,GAAG,CAACjB,OAAO,EAAE,EAAE,CAAC;IACpBK,GAAG,CAACY,GAAG,CAAChB,IAAI,EAAED,OAAO,CAACI,UAAU,GAAG,EAAE,CAAC;IAEtC;IACAG,IAAI,CAACM,SAAS,CACVV,MAAM,GAAG,CAAC,EACVQ,QAAQ,CAACG,MAAM,CAACT,GAAG,CAACU,QAAQ,CAAC,CAAC,EAAEZ,MAAM,GAAG,CAAC,CAAC,CAAC,CAACa,MAAM,EAAE,EACrD,KAAK,CACR;IAED,OAAOX,GAAG;EACd,CAAC;EAED;;;;EAIAd,qBAAA,CAAAK,SAAA,CAAAsB,UAAU,GAAV,UAAWC,OAAwB;IACzB,IAAArB,EAAA,GAAAT,cAAA,CAAA+B,YAAA,CAAAD,OAAA,CAAyC;MAAvCnB,OAAA,GAAAF,EAAA,CAAAE,OAAO;MAAEC,IAAA,GAAAH,EAAA,CAAAG,IAA8B;IAE/C,OAAO;MAAED,OAAO,EAAE,IAAI,CAACN,gBAAgB,CAAC2B,KAAK,CAACrB,OAAO,CAAC;MAAEC,IAAI,EAAAA;IAAA,CAAE;EAClE,CAAC;EACL,OAAAV,qBAAC;AAAD,CAAC,CA7CD;AAAa+B,OAAA,CAAA/B,qBAAA,GAAAA,qBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}