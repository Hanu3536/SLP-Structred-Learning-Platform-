{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar crc32_1 = require(\"@aws-crypto/crc32\");\n// All prelude components are unsigned, 32-bit integers\nvar PRELUDE_MEMBER_LENGTH = 4;\n// The prelude consists of two components\nvar PRELUDE_LENGTH = PRELUDE_MEMBER_LENGTH * 2;\n// Checksums are always CRC32 hashes.\nvar CHECKSUM_LENGTH = 4;\n// Messages must include a full prelude, a prelude checksum, and a message checksum\nvar MINIMUM_MESSAGE_LENGTH = PRELUDE_LENGTH + CHECKSUM_LENGTH * 2;\n/**\n * @internal\n */\nfunction splitMessage(_a) {\n  var byteLength = _a.byteLength,\n    byteOffset = _a.byteOffset,\n    buffer = _a.buffer;\n  if (byteLength < MINIMUM_MESSAGE_LENGTH) {\n    throw new Error('Provided message too short to accommodate event stream message overhead');\n  }\n  var view = new DataView(buffer, byteOffset, byteLength);\n  var messageLength = view.getUint32(0, false);\n  if (byteLength !== messageLength) {\n    throw new Error('Reported message length does not match received message length');\n  }\n  var headerLength = view.getUint32(PRELUDE_MEMBER_LENGTH, false);\n  var expectedPreludeChecksum = view.getUint32(PRELUDE_LENGTH, false);\n  var expectedMessageChecksum = view.getUint32(byteLength - CHECKSUM_LENGTH, false);\n  var checksummer = new crc32_1.Crc32().update(new Uint8Array(buffer, byteOffset, PRELUDE_LENGTH));\n  if (expectedPreludeChecksum !== checksummer.digest()) {\n    throw new Error(\"The prelude checksum specified in the message (\" + expectedPreludeChecksum + \") does not match the calculated CRC32 checksum (\" + checksummer.digest() + \")\");\n  }\n  checksummer.update(new Uint8Array(buffer, byteOffset + PRELUDE_LENGTH, byteLength - (PRELUDE_LENGTH + CHECKSUM_LENGTH)));\n  if (expectedMessageChecksum !== checksummer.digest()) {\n    throw new Error(\"The message checksum (\" + checksummer.digest() + \") did not match the expected value of \" + expectedMessageChecksum);\n  }\n  return {\n    headers: new DataView(buffer, byteOffset + PRELUDE_LENGTH + CHECKSUM_LENGTH, headerLength),\n    body: new Uint8Array(buffer, byteOffset + PRELUDE_LENGTH + CHECKSUM_LENGTH + headerLength, messageLength - headerLength - (PRELUDE_LENGTH + CHECKSUM_LENGTH + CHECKSUM_LENGTH))\n  };\n}\nexports.splitMessage = splitMessage;","map":{"version":3,"names":["crc32_1","require","PRELUDE_MEMBER_LENGTH","PRELUDE_LENGTH","CHECKSUM_LENGTH","MINIMUM_MESSAGE_LENGTH","splitMessage","_a","byteLength","byteOffset","buffer","Error","view","DataView","messageLength","getUint32","headerLength","expectedPreludeChecksum","expectedMessageChecksum","checksummer","Crc32","update","Uint8Array","digest","headers","body","exports"],"sources":["../src/splitMessage.ts"],"sourcesContent":[null],"mappings":";;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AAEA;AACA,IAAMC,qBAAqB,GAAG,CAAC;AAC/B;AACA,IAAMC,cAAc,GAAGD,qBAAqB,GAAG,CAAC;AAChD;AACA,IAAME,eAAe,GAAG,CAAC;AACzB;AACA,IAAMC,sBAAsB,GAAGF,cAAc,GAAGC,eAAe,GAAG,CAAC;AAUnE;;;AAGA,SAAgBE,YAAYA,CACxBC,EAAmD;MAAjDC,UAAA,GAAAD,EAAA,CAAAC,UAAU;IAAEC,UAAA,GAAAF,EAAA,CAAAE,UAAU;IAAEC,MAAA,GAAAH,EAAA,CAAAG,MAAM;EAEhC,IAAIF,UAAU,GAAGH,sBAAsB,EAAE;IACrC,MAAM,IAAIM,KAAK,CACX,yEAAyE,CAC5E;;EAGL,IAAMC,IAAI,GAAG,IAAIC,QAAQ,CAACH,MAAM,EAAED,UAAU,EAAED,UAAU,CAAC;EAEzD,IAAMM,aAAa,GAAGF,IAAI,CAACG,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC;EAE9C,IAAIP,UAAU,KAAKM,aAAa,EAAE;IAC9B,MAAM,IAAIH,KAAK,CACX,gEAAgE,CACnE;;EAGL,IAAMK,YAAY,GAAGJ,IAAI,CAACG,SAAS,CAACb,qBAAqB,EAAE,KAAK,CAAC;EACjE,IAAMe,uBAAuB,GAAGL,IAAI,CAACG,SAAS,CAACZ,cAAc,EAAE,KAAK,CAAC;EACrE,IAAMe,uBAAuB,GAAGN,IAAI,CAACG,SAAS,CAC1CP,UAAU,GAAGJ,eAAe,EAC5B,KAAK,CACR;EAED,IAAMe,WAAW,GAAI,IAAInB,OAAA,CAAAoB,KAAK,CAAL,CAAK,CAAEC,MAAM,CAClC,IAAIC,UAAU,CAACZ,MAAM,EAAED,UAAU,EAAEN,cAAc,CAAC,CACrD;EACD,IACIc,uBAAuB,KAAKE,WAAW,CAACI,MAAM,EAAE,EAClD;IACE,MAAM,IAAIZ,KAAK,CACX,oDACIM,uBAAuB,wDAEvBE,WAAW,CAACI,MAAM,EAAE,MACrB,CACN;;EAGLJ,WAAW,CAACE,MAAM,CAAC,IAAIC,UAAU,CAC7BZ,MAAM,EACND,UAAU,GAAGN,cAAc,EAC3BK,UAAU,IAAIL,cAAc,GAAGC,eAAe,CAAC,CAClD,CAAC;EACF,IAAIc,uBAAuB,KAAKC,WAAW,CAACI,MAAM,EAAE,EAAE;IAClD,MAAM,IAAIZ,KAAK,CACX,2BACIQ,WAAW,CAACI,MAAM,EAAE,8CACiBL,uBAAyB,CACrE;;EAGL,OAAO;IACHM,OAAO,EAAE,IAAIX,QAAQ,CACjBH,MAAM,EACND,UAAU,GAAGN,cAAc,GAAGC,eAAe,EAC7CY,YAAY,CACf;IACDS,IAAI,EAAE,IAAIH,UAAU,CAChBZ,MAAM,EACND,UAAU,GAAGN,cAAc,GAAGC,eAAe,GAAGY,YAAY,EAC5DF,aAAa,GAAGE,YAAY,IACxBb,cAAc,GAAGC,eAAe,GAAGA,eAAe,CACrD;GAER;AACL;AApEAsB,OAAA,CAAApB,YAAA,GAAAA,YAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}