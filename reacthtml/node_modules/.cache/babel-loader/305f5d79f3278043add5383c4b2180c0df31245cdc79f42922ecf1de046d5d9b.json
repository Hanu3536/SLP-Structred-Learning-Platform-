{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport JS from '../JS';\nimport MemoryStorage from '../StorageHelper';\nvar Linking = {};\nvar AppState = {\n  addEventListener: function (action, handler) {\n    return;\n  }\n};\n// if not in react native, just use local storage\nvar AsyncStorage = JS.browserOrNode().isBrowser ? new MemoryStorage().getStorage() : undefined;\nexport { Linking, AppState, AsyncStorage };","map":{"version":3,"names":["JS","MemoryStorage","Linking","AppState","addEventListener","action","handler","AsyncStorage","browserOrNode","isBrowser","getStorage","undefined"],"sources":["C:\\Study\\6805\\React\\reacthtml\\node_modules\\@aws-amplify\\core\\src\\RNComponents\\index.ts"],"sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport JS from '../JS';\nimport MemoryStorage from '../StorageHelper';\n\nconst Linking = {};\nconst AppState = {\n\taddEventListener(action, handler) {\n\t\treturn;\n\t},\n};\n\n// if not in react native, just use local storage\nconst AsyncStorage = JS.browserOrNode().isBrowser\n\t? new MemoryStorage().getStorage()\n\t: undefined;\n\nexport { Linking, AppState, AsyncStorage };\n"],"mappings":"AAAA;;;;;;;;;;;;AAaA,OAAOA,EAAE,MAAM,OAAO;AACtB,OAAOC,aAAa,MAAM,kBAAkB;AAE5C,IAAMC,OAAO,GAAG,EAAE;AAClB,IAAMC,QAAQ,GAAG;EAChBC,gBAAgB,WAAAA,CAACC,MAAM,EAAEC,OAAO;IAC/B;EACD;CACA;AAED;AACA,IAAMC,YAAY,GAAGP,EAAE,CAACQ,aAAa,EAAE,CAACC,SAAS,GAC9C,IAAIR,aAAa,EAAE,CAACS,UAAU,EAAE,GAChCC,SAAS;AAEZ,SAAST,OAAO,EAAEC,QAAQ,EAAEI,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}