{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Client from './Client';\nimport CognitoUser from './CognitoUser';\nimport StorageHelper from './StorageHelper';\n\n/** @class */\n\nvar CognitoUserPool = function () {\n  /**\n   * Constructs a new CognitoUserPool object\n   * @param {object} data Creation options.\n   * @param {string} data.UserPoolId Cognito user pool id.\n   * @param {string} data.ClientId User pool application client id.\n   * @param {object} data.Storage Optional storage object.\n   * @param {boolean} data.AdvancedSecurityDataCollectionFlag Optional:\n   *        boolean flag indicating if the data collection is enabled\n   *        to support cognito advanced security features. By default, this\n   *        flag is set to true.\n   */\n  function CognitoUserPool(data) {\n    _classCallCheck(this, CognitoUserPool);\n    var _ref = data || {},\n      UserPoolId = _ref.UserPoolId,\n      ClientId = _ref.ClientId,\n      endpoint = _ref.endpoint,\n      AdvancedSecurityDataCollectionFlag = _ref.AdvancedSecurityDataCollectionFlag;\n    if (!UserPoolId || !ClientId) {\n      throw new Error('Both UserPoolId and ClientId are required.');\n    }\n    if (!/^[\\w-]+_.+$/.test(UserPoolId)) {\n      throw new Error('Invalid UserPoolId format.');\n    }\n    var region = UserPoolId.split('_')[0];\n    this.userPoolId = UserPoolId;\n    this.clientId = ClientId;\n    this.client = new Client(region, endpoint);\n\n    /**\n     * By default, AdvancedSecurityDataCollectionFlag is set to true,\n     * if no input value is provided.\n     */\n    this.advancedSecurityDataCollectionFlag = AdvancedSecurityDataCollectionFlag !== false;\n    this.storage = data.Storage || new StorageHelper().getStorage();\n  }\n\n  /**\n   * @returns {string} the user pool id\n   */\n\n  CognitoUserPool.prototype.getUserPoolId = function getUserPoolId() {\n    return this.userPoolId;\n  };\n\n  /**\n   * @returns {string} the client id\n   */\n\n  CognitoUserPool.prototype.getClientId = function getClientId() {\n    return this.clientId;\n  };\n\n  /**\n   * @typedef {object} SignUpResult\n   * @property {CognitoUser} user New user.\n   * @property {bool} userConfirmed If the user is already confirmed.\n   */\n  /**\n   * method for signing up a user\n   * @param {string} username User's username.\n   * @param {string} password Plain-text initial password entered by user.\n   * @param {(AttributeArg[])=} userAttributes New user attributes.\n   * @param {(AttributeArg[])=} validationData Application metadata.\n   * @param {(AttributeArg[])=} clientMetadata Client metadata.\n   * @param {nodeCallback<SignUpResult>} callback Called on error or with the new user.\n   * @returns {void}\n   */\n\n  CognitoUserPool.prototype.signUp = function signUp(username, password, userAttributes, validationData, callback, clientMetadata) {\n    var _this = this;\n    var jsonReq = {\n      ClientId: this.clientId,\n      Username: username,\n      Password: password,\n      UserAttributes: userAttributes,\n      ValidationData: validationData,\n      ClientMetadata: clientMetadata\n    };\n    if (this.getUserContextData(username)) {\n      jsonReq.UserContextData = this.getUserContextData(username);\n    }\n    this.client.request('SignUp', jsonReq, function (err, data) {\n      if (err) {\n        return callback(err, null);\n      }\n      var cognitoUser = {\n        Username: username,\n        Pool: _this,\n        Storage: _this.storage\n      };\n      var returnData = {\n        user: new CognitoUser(cognitoUser),\n        userConfirmed: data.UserConfirmed,\n        userSub: data.UserSub,\n        codeDeliveryDetails: data.CodeDeliveryDetails\n      };\n      return callback(null, returnData);\n    });\n  };\n\n  /**\n   * method for getting the current user of the application from the local storage\n   *\n   * @returns {CognitoUser} the user retrieved from storage\n   */\n\n  CognitoUserPool.prototype.getCurrentUser = function getCurrentUser() {\n    var lastUserKey = 'CognitoIdentityServiceProvider.' + this.clientId + '.LastAuthUser';\n    var lastAuthUser = this.storage.getItem(lastUserKey);\n    if (lastAuthUser) {\n      var cognitoUser = {\n        Username: lastAuthUser,\n        Pool: this,\n        Storage: this.storage\n      };\n      return new CognitoUser(cognitoUser);\n    }\n    return null;\n  };\n\n  /**\n   * This method returns the encoded data string used for cognito advanced security feature.\n   * This would be generated only when developer has included the JS used for collecting the\n   * data on their client. Please refer to documentation to know more about using AdvancedSecurity\n   * features\n   * @param {string} username the username for the context data\n   * @returns {string} the user context data\n   **/\n\n  CognitoUserPool.prototype.getUserContextData = function getUserContextData(username) {\n    if (typeof AmazonCognitoAdvancedSecurityData === 'undefined') {\n      return undefined;\n    }\n    /* eslint-disable */\n    var amazonCognitoAdvancedSecurityDataConst = AmazonCognitoAdvancedSecurityData;\n    /* eslint-enable */\n\n    if (this.advancedSecurityDataCollectionFlag) {\n      var advancedSecurityData = amazonCognitoAdvancedSecurityDataConst.getData(username, this.userPoolId, this.clientId);\n      if (advancedSecurityData) {\n        var userContextData = {\n          EncodedData: advancedSecurityData\n        };\n        return userContextData;\n      }\n    }\n    return {};\n  };\n  return CognitoUserPool;\n}();\nexport default CognitoUserPool;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","Client","CognitoUser","StorageHelper","CognitoUserPool","data","_ref","UserPoolId","ClientId","endpoint","AdvancedSecurityDataCollectionFlag","Error","test","region","split","userPoolId","clientId","client","advancedSecurityDataCollectionFlag","storage","Storage","getStorage","prototype","getUserPoolId","getClientId","signUp","username","password","userAttributes","validationData","callback","clientMetadata","_this","jsonReq","Username","Password","UserAttributes","ValidationData","ClientMetadata","getUserContextData","UserContextData","request","err","cognitoUser","Pool","returnData","user","userConfirmed","UserConfirmed","userSub","UserSub","codeDeliveryDetails","CodeDeliveryDetails","getCurrentUser","lastUserKey","lastAuthUser","getItem","AmazonCognitoAdvancedSecurityData","undefined","amazonCognitoAdvancedSecurityDataConst","advancedSecurityData","getData","userContextData","EncodedData"],"sources":["C:/Study/6805/React/reacthtml/node_modules/amazon-cognito-identity-js/es/CognitoUserPool.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Client from './Client';\nimport CognitoUser from './CognitoUser';\nimport StorageHelper from './StorageHelper';\n\n/** @class */\n\nvar CognitoUserPool = function () {\n\t/**\n  * Constructs a new CognitoUserPool object\n  * @param {object} data Creation options.\n  * @param {string} data.UserPoolId Cognito user pool id.\n  * @param {string} data.ClientId User pool application client id.\n  * @param {object} data.Storage Optional storage object.\n  * @param {boolean} data.AdvancedSecurityDataCollectionFlag Optional:\n  *        boolean flag indicating if the data collection is enabled\n  *        to support cognito advanced security features. By default, this\n  *        flag is set to true.\n  */\n\tfunction CognitoUserPool(data) {\n\t\t_classCallCheck(this, CognitoUserPool);\n\n\t\tvar _ref = data || {},\n\t\t    UserPoolId = _ref.UserPoolId,\n\t\t    ClientId = _ref.ClientId,\n\t\t    endpoint = _ref.endpoint,\n\t\t    AdvancedSecurityDataCollectionFlag = _ref.AdvancedSecurityDataCollectionFlag;\n\n\t\tif (!UserPoolId || !ClientId) {\n\t\t\tthrow new Error('Both UserPoolId and ClientId are required.');\n\t\t}\n\t\tif (!/^[\\w-]+_.+$/.test(UserPoolId)) {\n\t\t\tthrow new Error('Invalid UserPoolId format.');\n\t\t}\n\t\tvar region = UserPoolId.split('_')[0];\n\n\t\tthis.userPoolId = UserPoolId;\n\t\tthis.clientId = ClientId;\n\n\t\tthis.client = new Client(region, endpoint);\n\n\t\t/**\n   * By default, AdvancedSecurityDataCollectionFlag is set to true,\n   * if no input value is provided.\n   */\n\t\tthis.advancedSecurityDataCollectionFlag = AdvancedSecurityDataCollectionFlag !== false;\n\n\t\tthis.storage = data.Storage || new StorageHelper().getStorage();\n\t}\n\n\t/**\n  * @returns {string} the user pool id\n  */\n\n\n\tCognitoUserPool.prototype.getUserPoolId = function getUserPoolId() {\n\t\treturn this.userPoolId;\n\t};\n\n\t/**\n  * @returns {string} the client id\n  */\n\n\n\tCognitoUserPool.prototype.getClientId = function getClientId() {\n\t\treturn this.clientId;\n\t};\n\n\t/**\n  * @typedef {object} SignUpResult\n  * @property {CognitoUser} user New user.\n  * @property {bool} userConfirmed If the user is already confirmed.\n  */\n\t/**\n  * method for signing up a user\n  * @param {string} username User's username.\n  * @param {string} password Plain-text initial password entered by user.\n  * @param {(AttributeArg[])=} userAttributes New user attributes.\n  * @param {(AttributeArg[])=} validationData Application metadata.\n  * @param {(AttributeArg[])=} clientMetadata Client metadata.\n  * @param {nodeCallback<SignUpResult>} callback Called on error or with the new user.\n  * @returns {void}\n  */\n\n\n\tCognitoUserPool.prototype.signUp = function signUp(username, password, userAttributes, validationData, callback, clientMetadata) {\n\t\tvar _this = this;\n\n\t\tvar jsonReq = {\n\t\t\tClientId: this.clientId,\n\t\t\tUsername: username,\n\t\t\tPassword: password,\n\t\t\tUserAttributes: userAttributes,\n\t\t\tValidationData: validationData,\n\t\t\tClientMetadata: clientMetadata\n\t\t};\n\t\tif (this.getUserContextData(username)) {\n\t\t\tjsonReq.UserContextData = this.getUserContextData(username);\n\t\t}\n\t\tthis.client.request('SignUp', jsonReq, function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err, null);\n\t\t\t}\n\n\t\t\tvar cognitoUser = {\n\t\t\t\tUsername: username,\n\t\t\t\tPool: _this,\n\t\t\t\tStorage: _this.storage\n\t\t\t};\n\n\t\t\tvar returnData = {\n\t\t\t\tuser: new CognitoUser(cognitoUser),\n\t\t\t\tuserConfirmed: data.UserConfirmed,\n\t\t\t\tuserSub: data.UserSub,\n\t\t\t\tcodeDeliveryDetails: data.CodeDeliveryDetails\n\t\t\t};\n\n\t\t\treturn callback(null, returnData);\n\t\t});\n\t};\n\n\t/**\n  * method for getting the current user of the application from the local storage\n  *\n  * @returns {CognitoUser} the user retrieved from storage\n  */\n\n\n\tCognitoUserPool.prototype.getCurrentUser = function getCurrentUser() {\n\t\tvar lastUserKey = 'CognitoIdentityServiceProvider.' + this.clientId + '.LastAuthUser';\n\n\t\tvar lastAuthUser = this.storage.getItem(lastUserKey);\n\t\tif (lastAuthUser) {\n\t\t\tvar cognitoUser = {\n\t\t\t\tUsername: lastAuthUser,\n\t\t\t\tPool: this,\n\t\t\t\tStorage: this.storage\n\t\t\t};\n\n\t\t\treturn new CognitoUser(cognitoUser);\n\t\t}\n\n\t\treturn null;\n\t};\n\n\t/**\n  * This method returns the encoded data string used for cognito advanced security feature.\n  * This would be generated only when developer has included the JS used for collecting the\n  * data on their client. Please refer to documentation to know more about using AdvancedSecurity\n  * features\n  * @param {string} username the username for the context data\n  * @returns {string} the user context data\n  **/\n\n\n\tCognitoUserPool.prototype.getUserContextData = function getUserContextData(username) {\n\t\tif (typeof AmazonCognitoAdvancedSecurityData === 'undefined') {\n\t\t\treturn undefined;\n\t\t}\n\t\t/* eslint-disable */\n\t\tvar amazonCognitoAdvancedSecurityDataConst = AmazonCognitoAdvancedSecurityData;\n\t\t/* eslint-enable */\n\n\t\tif (this.advancedSecurityDataCollectionFlag) {\n\t\t\tvar advancedSecurityData = amazonCognitoAdvancedSecurityDataConst.getData(username, this.userPoolId, this.clientId);\n\t\t\tif (advancedSecurityData) {\n\t\t\t\tvar userContextData = {\n\t\t\t\t\tEncodedData: advancedSecurityData\n\t\t\t\t};\n\t\t\t\treturn userContextData;\n\t\t\t}\n\t\t}\n\t\treturn {};\n\t};\n\n\treturn CognitoUserPool;\n}();\n\nexport default CognitoUserPool;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}