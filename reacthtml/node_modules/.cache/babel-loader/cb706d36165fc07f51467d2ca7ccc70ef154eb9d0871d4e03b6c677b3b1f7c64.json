{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nvar weekNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n/** @class */\n\nvar DateHelper = function () {\n  function DateHelper() {\n    _classCallCheck(this, DateHelper);\n  }\n\n  /**\n   * @returns {string} The current time in \"ddd MMM D HH:mm:ss UTC YYYY\" format.\n   */\n  DateHelper.prototype.getNowString = function getNowString() {\n    var now = new Date();\n    var weekDay = weekNames[now.getUTCDay()];\n    var month = monthNames[now.getUTCMonth()];\n    var day = now.getUTCDate();\n    var hours = now.getUTCHours();\n    if (hours < 10) {\n      hours = '0' + hours;\n    }\n    var minutes = now.getUTCMinutes();\n    if (minutes < 10) {\n      minutes = '0' + minutes;\n    }\n    var seconds = now.getUTCSeconds();\n    if (seconds < 10) {\n      seconds = '0' + seconds;\n    }\n    var year = now.getUTCFullYear();\n\n    // ddd MMM D HH:mm:ss UTC YYYY\n    var dateNow = weekDay + ' ' + month + ' ' + day + ' ' + hours + ':' + minutes + ':' + seconds + ' UTC ' + year;\n    return dateNow;\n  };\n  return DateHelper;\n}();\nexport default DateHelper;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","monthNames","weekNames","DateHelper","prototype","getNowString","now","Date","weekDay","getUTCDay","month","getUTCMonth","day","getUTCDate","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","year","getUTCFullYear","dateNow"],"sources":["C:/Study/6805/React/reacthtml/node_modules/amazon-cognito-identity-js/es/DateHelper.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nvar weekNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n/** @class */\n\nvar DateHelper = function () {\n\tfunction DateHelper() {\n\t\t_classCallCheck(this, DateHelper);\n\t}\n\n\t/**\n  * @returns {string} The current time in \"ddd MMM D HH:mm:ss UTC YYYY\" format.\n  */\n\tDateHelper.prototype.getNowString = function getNowString() {\n\t\tvar now = new Date();\n\n\t\tvar weekDay = weekNames[now.getUTCDay()];\n\t\tvar month = monthNames[now.getUTCMonth()];\n\t\tvar day = now.getUTCDate();\n\n\t\tvar hours = now.getUTCHours();\n\t\tif (hours < 10) {\n\t\t\thours = '0' + hours;\n\t\t}\n\n\t\tvar minutes = now.getUTCMinutes();\n\t\tif (minutes < 10) {\n\t\t\tminutes = '0' + minutes;\n\t\t}\n\n\t\tvar seconds = now.getUTCSeconds();\n\t\tif (seconds < 10) {\n\t\t\tseconds = '0' + seconds;\n\t\t}\n\n\t\tvar year = now.getUTCFullYear();\n\n\t\t// ddd MMM D HH:mm:ss UTC YYYY\n\t\tvar dateNow = weekDay + ' ' + month + ' ' + day + ' ' + hours + ':' + minutes + ':' + seconds + ' UTC ' + year;\n\n\t\treturn dateNow;\n\t};\n\n\treturn DateHelper;\n}();\n\nexport default DateHelper;"],"mappings":"AAAA,SAASA,eAAeA,CAACC,QAAQ,EAAEC,WAAW,EAAE;EAAE,IAAI,EAAED,QAAQ,YAAYC,WAAW,CAAC,EAAE;IAAE,MAAM,IAAIC,SAAS,CAAC,mCAAmC,CAAC;EAAE;AAAE;;AAExJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,UAAU,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;AACrG,IAAIC,SAAS,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;;AAEjE;;AAEA,IAAIC,UAAU,GAAG,YAAY;EAC5B,SAASA,UAAUA,CAAA,EAAG;IACrBN,eAAe,CAAC,IAAI,EAAEM,UAAU,CAAC;EAClC;;EAEA;AACD;AACA;EACCA,UAAU,CAACC,SAAS,CAACC,YAAY,GAAG,SAASA,YAAYA,CAAA,EAAG;IAC3D,IAAIC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IAEpB,IAAIC,OAAO,GAAGN,SAAS,CAACI,GAAG,CAACG,SAAS,CAAC,CAAC,CAAC;IACxC,IAAIC,KAAK,GAAGT,UAAU,CAACK,GAAG,CAACK,WAAW,CAAC,CAAC,CAAC;IACzC,IAAIC,GAAG,GAAGN,GAAG,CAACO,UAAU,CAAC,CAAC;IAE1B,IAAIC,KAAK,GAAGR,GAAG,CAACS,WAAW,CAAC,CAAC;IAC7B,IAAID,KAAK,GAAG,EAAE,EAAE;MACfA,KAAK,GAAG,GAAG,GAAGA,KAAK;IACpB;IAEA,IAAIE,OAAO,GAAGV,GAAG,CAACW,aAAa,CAAC,CAAC;IACjC,IAAID,OAAO,GAAG,EAAE,EAAE;MACjBA,OAAO,GAAG,GAAG,GAAGA,OAAO;IACxB;IAEA,IAAIE,OAAO,GAAGZ,GAAG,CAACa,aAAa,CAAC,CAAC;IACjC,IAAID,OAAO,GAAG,EAAE,EAAE;MACjBA,OAAO,GAAG,GAAG,GAAGA,OAAO;IACxB;IAEA,IAAIE,IAAI,GAAGd,GAAG,CAACe,cAAc,CAAC,CAAC;;IAE/B;IACA,IAAIC,OAAO,GAAGd,OAAO,GAAG,GAAG,GAAGE,KAAK,GAAG,GAAG,GAAGE,GAAG,GAAG,GAAG,GAAGE,KAAK,GAAG,GAAG,GAAGE,OAAO,GAAG,GAAG,GAAGE,OAAO,GAAG,OAAO,GAAGE,IAAI;IAE9G,OAAOE,OAAO;EACf,CAAC;EAED,OAAOnB,UAAU;AAClB,CAAC,CAAC,CAAC;AAEH,eAAeA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}