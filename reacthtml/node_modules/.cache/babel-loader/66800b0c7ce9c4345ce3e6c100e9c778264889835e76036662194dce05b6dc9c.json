{"ast":null,"code":"import { ConsoleLogger as LoggerClass } from './Logger';\nvar logger = new LoggerClass('Amplify');\nvar Amplify = /** @class */function () {\n  function Amplify() {}\n  Amplify.register = function (comp) {\n    logger.debug('component registered in amplify', comp);\n    this._components.push(comp);\n    if (typeof comp.getModuleName === 'function') {\n      Amplify[comp.getModuleName()] = comp;\n    } else {\n      logger.debug('no getModuleName method for component', comp);\n    }\n  };\n  Amplify.configure = function (config) {\n    var _this = this;\n    if (!config) return this._config;\n    this._config = Object.assign(this._config, config);\n    logger.debug('amplify config', this._config);\n    this._components.map(function (comp) {\n      comp.configure(_this._config);\n    });\n    return this._config;\n  };\n  Amplify.addPluggable = function (pluggable) {\n    if (pluggable && pluggable['getCategory'] && typeof pluggable['getCategory'] === 'function') {\n      this._components.map(function (comp) {\n        if (comp['addPluggable'] && typeof comp['addPluggable'] === 'function') {\n          comp.addPluggable(pluggable);\n        }\n      });\n    }\n  };\n  Amplify._components = [];\n  Amplify._config = {};\n  // for backward compatibility to avoid breaking change\n  // if someone is using like Amplify.Auth\n  Amplify.Auth = null;\n  Amplify.Analytics = null;\n  Amplify.API = null;\n  Amplify.Storage = null;\n  Amplify.I18n = null;\n  Amplify.Cache = null;\n  Amplify.PubSub = null;\n  Amplify.Interactions = null;\n  Amplify.Pushnotification = null;\n  Amplify.UI = null;\n  Amplify.XR = null;\n  Amplify.Predictions = null;\n  Amplify.Logger = LoggerClass;\n  Amplify.ServiceWorker = null;\n  return Amplify;\n}();\nexport default Amplify;","map":{"version":3,"names":["ConsoleLogger","LoggerClass","logger","Amplify","register","comp","debug","_components","push","getModuleName","configure","config","_this","_config","Object","assign","map","addPluggable","pluggable","Auth","Analytics","API","Storage","I18n","Cache","PubSub","Interactions","Pushnotification","UI","XR","Predictions","Logger","ServiceWorker"],"sources":["C:\\Study\\6805\\React\\reacthtml\\node_modules\\@aws-amplify\\core\\src\\Amplify.ts"],"sourcesContent":["import { ConsoleLogger as LoggerClass } from './Logger';\n\nconst logger = new LoggerClass('Amplify');\n\nexport default class Amplify {\n\tprivate static _components = [];\n\tprivate static _config = {};\n\n\t// for backward compatibility to avoid breaking change\n\t// if someone is using like Amplify.Auth\n\tstatic Auth = null;\n\tstatic Analytics = null;\n\tstatic API = null;\n\tstatic Storage = null;\n\tstatic I18n = null;\n\tstatic Cache = null;\n\tstatic PubSub = null;\n\tstatic Interactions = null;\n\tstatic Pushnotification = null;\n\tstatic UI = null;\n\tstatic XR = null;\n\tstatic Predictions = null;\n\n\tstatic Logger = LoggerClass;\n\tstatic ServiceWorker = null;\n\n\tstatic register(comp) {\n\t\tlogger.debug('component registered in amplify', comp);\n\t\tthis._components.push(comp);\n\t\tif (typeof comp.getModuleName === 'function') {\n\t\t\tAmplify[comp.getModuleName()] = comp;\n\t\t} else {\n\t\t\tlogger.debug('no getModuleName method for component', comp);\n\t\t}\n\t}\n\n\tstatic configure(config) {\n\t\tif (!config) return this._config;\n\n\t\tthis._config = Object.assign(this._config, config);\n\t\tlogger.debug('amplify config', this._config);\n\t\tthis._components.map(comp => {\n\t\t\tcomp.configure(this._config);\n\t\t});\n\n\t\treturn this._config;\n\t}\n\n\tstatic addPluggable(pluggable) {\n\t\tif (\n\t\t\tpluggable &&\n\t\t\tpluggable['getCategory'] &&\n\t\t\ttypeof pluggable['getCategory'] === 'function'\n\t\t) {\n\t\t\tthis._components.map(comp => {\n\t\t\t\tif (\n\t\t\t\t\tcomp['addPluggable'] &&\n\t\t\t\t\ttypeof comp['addPluggable'] === 'function'\n\t\t\t\t) {\n\t\t\t\t\tcomp.addPluggable(pluggable);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n"],"mappings":"AAAA,SAASA,aAAa,IAAIC,WAAW,QAAQ,UAAU;AAEvD,IAAMC,MAAM,GAAG,IAAID,WAAW,CAAC,SAAS,CAAC;AAEzC,IAAAE,OAAA;EAAA,SAAAA,QAAA,GA4DA;EAtCQA,OAAA,CAAAC,QAAQ,GAAf,UAAgBC,IAAI;IACnBH,MAAM,CAACI,KAAK,CAAC,iCAAiC,EAAED,IAAI,CAAC;IACrD,IAAI,CAACE,WAAW,CAACC,IAAI,CAACH,IAAI,CAAC;IAC3B,IAAI,OAAOA,IAAI,CAACI,aAAa,KAAK,UAAU,EAAE;MAC7CN,OAAO,CAACE,IAAI,CAACI,aAAa,EAAE,CAAC,GAAGJ,IAAI;KACpC,MAAM;MACNH,MAAM,CAACI,KAAK,CAAC,uCAAuC,EAAED,IAAI,CAAC;;EAE7D,CAAC;EAEMF,OAAA,CAAAO,SAAS,GAAhB,UAAiBC,MAAM;IAAvB,IAAAC,KAAA;IACC,IAAI,CAACD,MAAM,EAAE,OAAO,IAAI,CAACE,OAAO;IAEhC,IAAI,CAACA,OAAO,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAACF,OAAO,EAAEF,MAAM,CAAC;IAClDT,MAAM,CAACI,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAACO,OAAO,CAAC;IAC5C,IAAI,CAACN,WAAW,CAACS,GAAG,CAAC,UAAAX,IAAI;MACxBA,IAAI,CAACK,SAAS,CAACE,KAAI,CAACC,OAAO,CAAC;IAC7B,CAAC,CAAC;IAEF,OAAO,IAAI,CAACA,OAAO;EACpB,CAAC;EAEMV,OAAA,CAAAc,YAAY,GAAnB,UAAoBC,SAAS;IAC5B,IACCA,SAAS,IACTA,SAAS,CAAC,aAAa,CAAC,IACxB,OAAOA,SAAS,CAAC,aAAa,CAAC,KAAK,UAAU,EAC7C;MACD,IAAI,CAACX,WAAW,CAACS,GAAG,CAAC,UAAAX,IAAI;QACxB,IACCA,IAAI,CAAC,cAAc,CAAC,IACpB,OAAOA,IAAI,CAAC,cAAc,CAAC,KAAK,UAAU,EACzC;UACDA,IAAI,CAACY,YAAY,CAACC,SAAS,CAAC;;MAE9B,CAAC,CAAC;;EAEJ,CAAC;EA1Dcf,OAAA,CAAAI,WAAW,GAAG,EAAE;EAChBJ,OAAA,CAAAU,OAAO,GAAG,EAAE;EAE3B;EACA;EACOV,OAAA,CAAAgB,IAAI,GAAG,IAAI;EACXhB,OAAA,CAAAiB,SAAS,GAAG,IAAI;EAChBjB,OAAA,CAAAkB,GAAG,GAAG,IAAI;EACVlB,OAAA,CAAAmB,OAAO,GAAG,IAAI;EACdnB,OAAA,CAAAoB,IAAI,GAAG,IAAI;EACXpB,OAAA,CAAAqB,KAAK,GAAG,IAAI;EACZrB,OAAA,CAAAsB,MAAM,GAAG,IAAI;EACbtB,OAAA,CAAAuB,YAAY,GAAG,IAAI;EACnBvB,OAAA,CAAAwB,gBAAgB,GAAG,IAAI;EACvBxB,OAAA,CAAAyB,EAAE,GAAG,IAAI;EACTzB,OAAA,CAAA0B,EAAE,GAAG,IAAI;EACT1B,OAAA,CAAA2B,WAAW,GAAG,IAAI;EAElB3B,OAAA,CAAA4B,MAAM,GAAG9B,WAAW;EACpBE,OAAA,CAAA6B,aAAa,GAAG,IAAI;EAwC5B,OAAA7B,OAAC;CAAA,CA5DD;eAAqBA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}