{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { GraphQLError } from 'graphql';\nimport { print } from 'graphql/language/printer';\nimport { parse } from 'graphql/language/parser';\nimport * as Observable from 'zen-observable';\nimport { RestClient as RestClass } from './RestClient';\nimport Amplify, { ConsoleLogger as Logger, Credentials, Constants } from '@aws-amplify/core';\nimport Auth from '@aws-amplify/auth';\nimport Cache from '@aws-amplify/cache';\nimport { INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER } from '@aws-amplify/core/lib/constants';\nimport { v4 as uuid } from 'uuid';\nvar USER_AGENT_HEADER = 'x-amz-user-agent';\nvar logger = new Logger('API');\nexport var graphqlOperation = function (query, variables) {\n  if (variables === void 0) {\n    variables = {};\n  }\n  return {\n    query: query,\n    variables: variables\n  };\n};\n/**\n * Export Cloud Logic APIs\n */\nvar APIClass = /** @class */function () {\n  /**\n   * Initialize Storage with AWS configuration\n   * @param {Object} options - Configuration object for storage\n   */\n  function APIClass(options) {\n    this._api = null;\n    this._pubSub = Amplify.PubSub;\n    this.clientIdentifier = uuid();\n    this._options = options;\n    logger.debug('API Options', this._options);\n  }\n  APIClass.prototype.getModuleName = function () {\n    return 'API';\n  };\n  /**\n   * Configure API part with aws configurations\n   * @param {Object} config - Configuration of the API\n   * @return {Object} - The current configuration\n   */\n  APIClass.prototype.configure = function (options) {\n    var _a = options || {},\n      _b = _a.API,\n      API = _b === void 0 ? {} : _b,\n      otherOptions = __rest(_a, [\"API\"]);\n    var opt = __assign(__assign({}, otherOptions), API);\n    logger.debug('configure API', {\n      opt: opt\n    });\n    if (opt['aws_project_region']) {\n      if (opt['aws_cloud_logic_custom']) {\n        var custom = opt['aws_cloud_logic_custom'];\n        opt.endpoints = typeof custom === 'string' ? JSON.parse(custom) : custom;\n      }\n      opt = Object.assign({}, opt, {\n        region: opt['aws_project_region'],\n        header: {}\n      });\n    }\n    if (!Array.isArray(opt.endpoints)) {\n      opt.endpoints = [];\n    }\n    // Check if endpoints has custom_headers and validate if is a function\n    opt.endpoints.forEach(function (endpoint) {\n      if (typeof endpoint.custom_header !== 'undefined' && typeof endpoint.custom_header !== 'function') {\n        logger.warn('API ' + endpoint.name + ', custom_header should be a function');\n        endpoint.custom_header = undefined;\n      }\n    });\n    if (typeof opt.graphql_headers !== 'undefined' && typeof opt.graphql_headers !== 'function') {\n      logger.warn('graphql_headers should be a function');\n      opt.graphql_headers = undefined;\n    }\n    this._options = Object.assign({}, this._options, opt);\n    this.createInstance();\n    return this._options;\n  };\n  /**\n   * Create an instance of API for the library\n   * @return - A promise of true if Success\n   */\n  APIClass.prototype.createInstance = function () {\n    logger.debug('create API instance');\n    if (this._options) {\n      this._api = new RestClass(this._options);\n      return true;\n    } else {\n      return Promise.reject('API not configured');\n    }\n  };\n  /**\n   * Make a GET request\n   * @param {string} apiName  - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.get = function (apiName, path, init) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_1, endpoint;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this._api) return [3 /*break*/, 4];\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, this.createInstance()];\n          case 2:\n            _a.sent();\n            return [3 /*break*/, 4];\n          case 3:\n            error_1 = _a.sent();\n            return [2 /*return*/, Promise.reject(error_1)];\n          case 4:\n            endpoint = this._api.endpoint(apiName);\n            if (endpoint.length === 0) {\n              return [2 /*return*/, Promise.reject('API ' + apiName + ' does not exist')];\n            }\n            return [2 /*return*/, this._api.get(endpoint + path, init)];\n        }\n      });\n    });\n  };\n  /**\n   * Make a POST request\n   * @param {string} apiName  - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.post = function (apiName, path, init) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_2, endpoint;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this._api) return [3 /*break*/, 4];\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, this.createInstance()];\n          case 2:\n            _a.sent();\n            return [3 /*break*/, 4];\n          case 3:\n            error_2 = _a.sent();\n            return [2 /*return*/, Promise.reject(error_2)];\n          case 4:\n            endpoint = this._api.endpoint(apiName);\n            if (endpoint.length === 0) {\n              return [2 /*return*/, Promise.reject('API ' + apiName + ' does not exist')];\n            }\n            return [2 /*return*/, this._api.post(endpoint + path, init)];\n        }\n      });\n    });\n  };\n  /**\n   * Make a PUT request\n   * @param {string} apiName  - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.put = function (apiName, path, init) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_3, endpoint;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this._api) return [3 /*break*/, 4];\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, this.createInstance()];\n          case 2:\n            _a.sent();\n            return [3 /*break*/, 4];\n          case 3:\n            error_3 = _a.sent();\n            return [2 /*return*/, Promise.reject(error_3)];\n          case 4:\n            endpoint = this._api.endpoint(apiName);\n            if (endpoint.length === 0) {\n              return [2 /*return*/, Promise.reject('API ' + apiName + ' does not exist')];\n            }\n            return [2 /*return*/, this._api.put(endpoint + path, init)];\n        }\n      });\n    });\n  };\n  /**\n   * Make a PATCH request\n   * @param {string} apiName  - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.patch = function (apiName, path, init) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_4, endpoint;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this._api) return [3 /*break*/, 4];\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, this.createInstance()];\n          case 2:\n            _a.sent();\n            return [3 /*break*/, 4];\n          case 3:\n            error_4 = _a.sent();\n            return [2 /*return*/, Promise.reject(error_4)];\n          case 4:\n            endpoint = this._api.endpoint(apiName);\n            if (endpoint.length === 0) {\n              return [2 /*return*/, Promise.reject('API ' + apiName + ' does not exist')];\n            }\n            return [2 /*return*/, this._api.patch(endpoint + path, init)];\n        }\n      });\n    });\n  };\n  /**\n   * Make a DEL request\n   * @param {string} apiName  - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.del = function (apiName, path, init) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_5, endpoint;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this._api) return [3 /*break*/, 4];\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, this.createInstance()];\n          case 2:\n            _a.sent();\n            return [3 /*break*/, 4];\n          case 3:\n            error_5 = _a.sent();\n            return [2 /*return*/, Promise.reject(error_5)];\n          case 4:\n            endpoint = this._api.endpoint(apiName);\n            if (endpoint.length === 0) {\n              return [2 /*return*/, Promise.reject('API ' + apiName + ' does not exist')];\n            }\n            return [2 /*return*/, this._api.del(endpoint + path, init)];\n        }\n      });\n    });\n  };\n  /**\n   * Make a HEAD request\n   * @param {string} apiName  - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.head = function (apiName, path, init) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_6, endpoint;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this._api) return [3 /*break*/, 4];\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, this.createInstance()];\n          case 2:\n            _a.sent();\n            return [3 /*break*/, 4];\n          case 3:\n            error_6 = _a.sent();\n            return [2 /*return*/, Promise.reject(error_6)];\n          case 4:\n            endpoint = this._api.endpoint(apiName);\n            if (endpoint.length === 0) {\n              return [2 /*return*/, Promise.reject('API ' + apiName + ' does not exist')];\n            }\n            return [2 /*return*/, this._api.head(endpoint + path, init)];\n        }\n      });\n    });\n  };\n  /**\n   * Getting endpoint for API\n   * @param {string} apiName - The name of the api\n   * @return {string} - The endpoint of the api\n   */\n  APIClass.prototype.endpoint = function (apiName) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_7;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this._api) return [3 /*break*/, 4];\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, this.createInstance()];\n          case 2:\n            _a.sent();\n            return [3 /*break*/, 4];\n          case 3:\n            error_7 = _a.sent();\n            return [2 /*return*/, Promise.reject(error_7)];\n          case 4:\n            return [2 /*return*/, this._api.endpoint(apiName)];\n        }\n      });\n    });\n  };\n  APIClass.prototype._headerBasedAuth = function (defaultAuthenticationType) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, aws_appsync_authenticationType, apiKey, authenticationType, headers, _b, credentialsOK, federatedInfo, session;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = this._options, aws_appsync_authenticationType = _a.aws_appsync_authenticationType, apiKey = _a.aws_appsync_apiKey;\n            authenticationType = defaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n            headers = {};\n            _b = authenticationType;\n            switch (_b) {\n              case 'API_KEY':\n                return [3 /*break*/, 1];\n              case 'AWS_IAM':\n                return [3 /*break*/, 2];\n              case 'OPENID_CONNECT':\n                return [3 /*break*/, 4];\n              case 'AMAZON_COGNITO_USER_POOLS':\n                return [3 /*break*/, 6];\n            }\n            return [3 /*break*/, 8];\n          case 1:\n            if (!apiKey) {\n              throw new Error('No api-key configured');\n            }\n            headers = {\n              Authorization: null,\n              'X-Api-Key': apiKey\n            };\n            return [3 /*break*/, 9];\n          case 2:\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 3:\n            credentialsOK = _c.sent();\n            if (!credentialsOK) {\n              throw new Error('No credentials');\n            }\n            return [3 /*break*/, 9];\n          case 4:\n            return [4 /*yield*/, Cache.getItem('federatedInfo')];\n          case 5:\n            federatedInfo = _c.sent();\n            if (!federatedInfo || !federatedInfo.token) {\n              throw new Error('No federated jwt');\n            }\n            headers = {\n              Authorization: federatedInfo.token\n            };\n            return [3 /*break*/, 9];\n          case 6:\n            return [4 /*yield*/, Auth.currentSession()];\n          case 7:\n            session = _c.sent();\n            headers = {\n              Authorization: session.getAccessToken().getJwtToken()\n            };\n            return [3 /*break*/, 9];\n          case 8:\n            headers = {\n              Authorization: null\n            };\n            return [3 /*break*/, 9];\n          case 9:\n            return [2 /*return*/, headers];\n        }\n      });\n    });\n  };\n  /**\n   * to get the operation type\n   * @param operation\n   */\n  APIClass.prototype.getGraphqlOperationType = function (operation) {\n    var doc = parse(operation);\n    var operationType = doc.definitions[0].operation;\n    return operationType;\n  };\n  /**\n   * Executes a GraphQL operation\n   *\n   * @param {GraphQLOptions} GraphQL Options\n   * @returns {Promise<GraphQLResult> | Observable<object>}\n   */\n  APIClass.prototype.graphql = function (_a) {\n    var paramQuery = _a.query,\n      _b = _a.variables,\n      variables = _b === void 0 ? {} : _b,\n      authMode = _a.authMode;\n    var query = typeof paramQuery === 'string' ? parse(paramQuery) : parse(print(paramQuery));\n    var _c = query.definitions.filter(function (def) {\n        return def.kind === 'OperationDefinition';\n      })[0],\n      operationDef = _c === void 0 ? {} : _c;\n    var operationType = operationDef.operation;\n    switch (operationType) {\n      case 'query':\n      case 'mutation':\n        return this._graphql({\n          query: query,\n          variables: variables,\n          authMode: authMode\n        });\n      case 'subscription':\n        return this._graphqlSubscribe({\n          query: query,\n          variables: variables,\n          authMode: authMode\n        });\n    }\n    throw new Error(\"invalid operation type: \" + operationType);\n  };\n  APIClass.prototype._graphql = function (_a, additionalHeaders) {\n    var query = _a.query,\n      variables = _a.variables,\n      authMode = _a.authMode;\n    if (additionalHeaders === void 0) {\n      additionalHeaders = {};\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var _b, region, appSyncGraphqlEndpoint, _c, graphql_headers, customGraphqlEndpoint, customEndpointRegion, headers, _d, _e, _f, _g, _h, _j, body, init, endpoint, error, response, err_1, errors;\n      var _k;\n      return __generator(this, function (_l) {\n        switch (_l.label) {\n          case 0:\n            if (!!this._api) return [3 /*break*/, 2];\n            return [4 /*yield*/, this.createInstance()];\n          case 1:\n            _l.sent();\n            _l.label = 2;\n          case 2:\n            _b = this._options, region = _b.aws_appsync_region, appSyncGraphqlEndpoint = _b.aws_appsync_graphqlEndpoint, _c = _b.graphql_headers, graphql_headers = _c === void 0 ? function () {\n              return {};\n            } : _c, customGraphqlEndpoint = _b.graphql_endpoint, customEndpointRegion = _b.graphql_endpoint_iam_region;\n            _d = [{}];\n            _e = !customGraphqlEndpoint;\n            if (!_e) return [3 /*break*/, 4];\n            return [4 /*yield*/, this._headerBasedAuth(authMode)];\n          case 3:\n            _e = _l.sent();\n            _l.label = 4;\n          case 4:\n            _f = [__assign.apply(void 0, _d.concat([_e]))];\n            _g = customGraphqlEndpoint;\n            if (!_g) return [3 /*break*/, 8];\n            if (!customEndpointRegion) return [3 /*break*/, 6];\n            return [4 /*yield*/, this._headerBasedAuth(authMode)];\n          case 5:\n            _h = _l.sent();\n            return [3 /*break*/, 7];\n          case 6:\n            _h = {\n              Authorization: null\n            };\n            _l.label = 7;\n          case 7:\n            _g = _h;\n            _l.label = 8;\n          case 8:\n            _j = [__assign.apply(void 0, _f.concat([_g]))];\n            return [4 /*yield*/, graphql_headers({\n              query: query,\n              variables: variables\n            })];\n          case 9:\n            headers = __assign.apply(void 0, [__assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), additionalHeaders]), !customGraphqlEndpoint && (_k = {}, _k[USER_AGENT_HEADER] = Constants.userAgent, _k)]);\n            body = {\n              query: print(query),\n              variables: variables\n            };\n            init = {\n              headers: headers,\n              body: body,\n              signerServiceInfo: {\n                service: !customGraphqlEndpoint ? 'appsync' : 'execute-api',\n                region: !customGraphqlEndpoint ? region : customEndpointRegion\n              }\n            };\n            endpoint = customGraphqlEndpoint || appSyncGraphqlEndpoint;\n            if (!endpoint) {\n              error = new GraphQLError('No graphql endpoint provided.');\n              throw {\n                data: {},\n                errors: [error]\n              };\n            }\n            _l.label = 10;\n          case 10:\n            _l.trys.push([10, 12,, 13]);\n            return [4 /*yield*/, this._api.post(endpoint, init)];\n          case 11:\n            response = _l.sent();\n            return [3 /*break*/, 13];\n          case 12:\n            err_1 = _l.sent();\n            response = {\n              data: {},\n              errors: [new GraphQLError(err_1.message)]\n            };\n            return [3 /*break*/, 13];\n          case 13:\n            errors = response.errors;\n            if (errors && errors.length) {\n              throw response;\n            }\n            return [2 /*return*/, response];\n        }\n      });\n    });\n  };\n  APIClass.prototype._graphqlSubscribe = function (_a) {\n    var _this = this;\n    var query = _a.query,\n      variables = _a.variables,\n      authMode = _a.authMode;\n    if (Amplify.PubSub && typeof Amplify.PubSub.subscribe === 'function') {\n      return new Observable(function (observer) {\n        var handle = null;\n        (function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            var aws_appsync_authenticationType, authenticationType, additionalheaders, subscription, newSubscriptions_1, newTopics, observable, error_8;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  aws_appsync_authenticationType = this._options.aws_appsync_authenticationType;\n                  authenticationType = authMode || aws_appsync_authenticationType;\n                  additionalheaders = __assign({}, authenticationType === 'API_KEY' ? {\n                    'x-amz-subscriber-id': this.clientIdentifier\n                  } : {});\n                  _a.label = 1;\n                case 1:\n                  _a.trys.push([1, 3,, 4]);\n                  return [4 /*yield*/, this._graphql({\n                    query: query,\n                    variables: variables,\n                    authMode: authMode\n                  }, additionalheaders)];\n                case 2:\n                  subscription = _a.sent().extensions.subscription;\n                  newSubscriptions_1 = subscription.newSubscriptions;\n                  newTopics = Object.getOwnPropertyNames(newSubscriptions_1).map(function (p) {\n                    return newSubscriptions_1[p].topic;\n                  });\n                  observable = Amplify.PubSub.subscribe(newTopics, __assign(__assign({}, subscription), {\n                    provider: INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER\n                  }));\n                  handle = observable.subscribe({\n                    next: function (data) {\n                      return observer.next(data);\n                    },\n                    complete: function () {\n                      return observer.complete();\n                    },\n                    error: function (data) {\n                      var error = __assign({}, data);\n                      if (!error.errors) {\n                        error.errors = [__assign({}, new GraphQLError('Network Error'))];\n                      }\n                      observer.error(error);\n                    }\n                  });\n                  return [3 /*break*/, 4];\n                case 3:\n                  error_8 = _a.sent();\n                  observer.error(error_8);\n                  return [3 /*break*/, 4];\n                case 4:\n                  return [2 /*return*/];\n              }\n            });\n          });\n        })();\n\n        return function () {\n          if (handle) {\n            handle.unsubscribe();\n          }\n        };\n      });\n    } else {\n      logger.debug('No pubsub module applied for subscription');\n      throw new Error('No pubsub module applied for subscription');\n    }\n  };\n  /**\n   * @private\n   */\n  APIClass.prototype._ensureCredentials = function () {\n    return Credentials.get().then(function (credentials) {\n      if (!credentials) return false;\n      var cred = Credentials.shear(credentials);\n      logger.debug('set credentials for api', cred);\n      return true;\n    }).catch(function (err) {\n      logger.warn('ensure credentials error', err);\n      return false;\n    });\n  };\n  return APIClass;\n}();\nexport default APIClass;","map":{"version":3,"names":["GraphQLError","print","parse","Observable","RestClient","RestClass","Amplify","ConsoleLogger","Logger","Credentials","Constants","Auth","Cache","INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER","v4","uuid","USER_AGENT_HEADER","logger","graphqlOperation","query","variables","APIClass","options","_api","_pubSub","PubSub","clientIdentifier","_options","debug","prototype","getModuleName","configure","_a","_b","API","otherOptions","__rest","opt","__assign","custom","endpoints","JSON","Object","assign","region","header","Array","isArray","forEach","endpoint","custom_header","warn","name","undefined","graphql_headers","createInstance","Promise","reject","get","apiName","path","init","sent","error_1","length","post","error_2","put","error_3","patch","error_4","del","error_5","head","error_6","error_7","_headerBasedAuth","defaultAuthenticationType","aws_appsync_authenticationType","apiKey","aws_appsync_apiKey","authenticationType","headers","Error","Authorization","_ensureCredentials","credentialsOK","_c","getItem","federatedInfo","token","currentSession","session","getAccessToken","getJwtToken","getGraphqlOperationType","operation","doc","operationType","definitions","graphql","paramQuery","authMode","filter","def","kind","operationDef","_graphql","_graphqlSubscribe","additionalHeaders","_l","aws_appsync_region","appSyncGraphqlEndpoint","aws_appsync_graphqlEndpoint","customGraphqlEndpoint","graphql_endpoint","customEndpointRegion","graphql_endpoint_iam_region","_e","_g","_h","apply","_j","concat","_k","userAgent","body","signerServiceInfo","service","error","data","errors","response","err_1","message","_this","subscribe","observer","handle","__awaiter","additionalheaders","subscription","extensions","newSubscriptions_1","newSubscriptions","newTopics","getOwnPropertyNames","map","p","topic","observable","provider","next","complete","error_8","unsubscribe","then","credentials","cred","shear","catch","err"],"sources":["C:\\Study\\6805\\React\\reacthtml\\node_modules\\@aws-amplify\\api\\src\\API.ts"],"sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { OperationDefinitionNode, GraphQLError } from 'graphql';\nimport { print } from 'graphql/language/printer';\nimport { parse } from 'graphql/language/parser';\nimport * as Observable from 'zen-observable';\nimport { RestClient as RestClass } from './RestClient';\nimport Amplify, {\n\tConsoleLogger as Logger,\n\tCredentials,\n\tConstants,\n} from '@aws-amplify/core';\nimport Auth from '@aws-amplify/auth';\nimport { GraphQLOptions, GraphQLResult } from './types';\nimport Cache from '@aws-amplify/cache';\nimport { INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER } from '@aws-amplify/core/lib/constants';\nimport { v4 as uuid } from 'uuid';\nconst USER_AGENT_HEADER = 'x-amz-user-agent';\n\nconst logger = new Logger('API');\n\nexport const graphqlOperation = (query, variables = {}) => ({\n\tquery,\n\tvariables,\n});\n\n/**\n * Export Cloud Logic APIs\n */\nexport default class APIClass {\n\t/**\n\t * @private\n\t */\n\tprivate _options;\n\tprivate _api = null;\n\tprivate _pubSub = Amplify.PubSub;\n\n\t/**\n\t * Initialize Storage with AWS configuration\n\t * @param {Object} options - Configuration object for storage\n\t */\n\tconstructor(options) {\n\t\tthis._options = options;\n\t\tlogger.debug('API Options', this._options);\n\t}\n\n\tpublic getModuleName() {\n\t\treturn 'API';\n\t}\n\n\t/**\n\t * Configure API part with aws configurations\n\t * @param {Object} config - Configuration of the API\n\t * @return {Object} - The current configuration\n\t */\n\tconfigure(options) {\n\t\tconst { API = {}, ...otherOptions } = options || {};\n\t\tlet opt = { ...otherOptions, ...API };\n\t\tlogger.debug('configure API', { opt });\n\n\t\tif (opt['aws_project_region']) {\n\t\t\tif (opt['aws_cloud_logic_custom']) {\n\t\t\t\tconst custom = opt['aws_cloud_logic_custom'];\n\t\t\t\topt.endpoints =\n\t\t\t\t\ttypeof custom === 'string' ? JSON.parse(custom) : custom;\n\t\t\t}\n\n\t\t\topt = Object.assign({}, opt, {\n\t\t\t\tregion: opt['aws_project_region'],\n\t\t\t\theader: {},\n\t\t\t});\n\t\t}\n\n\t\tif (!Array.isArray(opt.endpoints)) {\n\t\t\topt.endpoints = [];\n\t\t}\n\n\t\t// Check if endpoints has custom_headers and validate if is a function\n\t\topt.endpoints.forEach(endpoint => {\n\t\t\tif (\n\t\t\t\ttypeof endpoint.custom_header !== 'undefined' &&\n\t\t\t\ttypeof endpoint.custom_header !== 'function'\n\t\t\t) {\n\t\t\t\tlogger.warn(\n\t\t\t\t\t'API ' + endpoint.name + ', custom_header should be a function'\n\t\t\t\t);\n\t\t\t\tendpoint.custom_header = undefined;\n\t\t\t}\n\t\t});\n\n\t\tif (\n\t\t\ttypeof opt.graphql_headers !== 'undefined' &&\n\t\t\ttypeof opt.graphql_headers !== 'function'\n\t\t) {\n\t\t\tlogger.warn('graphql_headers should be a function');\n\t\t\topt.graphql_headers = undefined;\n\t\t}\n\n\t\tthis._options = Object.assign({}, this._options, opt);\n\n\t\tthis.createInstance();\n\n\t\treturn this._options;\n\t}\n\n\t/**\n\t * Create an instance of API for the library\n\t * @return - A promise of true if Success\n\t */\n\tcreateInstance() {\n\t\tlogger.debug('create API instance');\n\t\tif (this._options) {\n\t\t\tthis._api = new RestClass(this._options);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn Promise.reject('API not configured');\n\t\t}\n\t}\n\n\t/**\n\t * Make a GET request\n\t * @param {string} apiName  - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tasync get(apiName, path, init) {\n\t\tif (!this._api) {\n\t\t\ttry {\n\t\t\t\tawait this.createInstance();\n\t\t\t} catch (error) {\n\t\t\t\treturn Promise.reject(error);\n\t\t\t}\n\t\t}\n\n\t\tconst endpoint = this._api.endpoint(apiName);\n\t\tif (endpoint.length === 0) {\n\t\t\treturn Promise.reject('API ' + apiName + ' does not exist');\n\t\t}\n\t\treturn this._api.get(endpoint + path, init);\n\t}\n\n\t/**\n\t * Make a POST request\n\t * @param {string} apiName  - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tasync post(apiName, path, init) {\n\t\tif (!this._api) {\n\t\t\ttry {\n\t\t\t\tawait this.createInstance();\n\t\t\t} catch (error) {\n\t\t\t\treturn Promise.reject(error);\n\t\t\t}\n\t\t}\n\n\t\tconst endpoint = this._api.endpoint(apiName);\n\t\tif (endpoint.length === 0) {\n\t\t\treturn Promise.reject('API ' + apiName + ' does not exist');\n\t\t}\n\t\treturn this._api.post(endpoint + path, init);\n\t}\n\n\t/**\n\t * Make a PUT request\n\t * @param {string} apiName  - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tasync put(apiName, path, init) {\n\t\tif (!this._api) {\n\t\t\ttry {\n\t\t\t\tawait this.createInstance();\n\t\t\t} catch (error) {\n\t\t\t\treturn Promise.reject(error);\n\t\t\t}\n\t\t}\n\n\t\tconst endpoint = this._api.endpoint(apiName);\n\t\tif (endpoint.length === 0) {\n\t\t\treturn Promise.reject('API ' + apiName + ' does not exist');\n\t\t}\n\t\treturn this._api.put(endpoint + path, init);\n\t}\n\n\t/**\n\t * Make a PATCH request\n\t * @param {string} apiName  - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tasync patch(apiName, path, init) {\n\t\tif (!this._api) {\n\t\t\ttry {\n\t\t\t\tawait this.createInstance();\n\t\t\t} catch (error) {\n\t\t\t\treturn Promise.reject(error);\n\t\t\t}\n\t\t}\n\n\t\tconst endpoint = this._api.endpoint(apiName);\n\t\tif (endpoint.length === 0) {\n\t\t\treturn Promise.reject('API ' + apiName + ' does not exist');\n\t\t}\n\t\treturn this._api.patch(endpoint + path, init);\n\t}\n\n\t/**\n\t * Make a DEL request\n\t * @param {string} apiName  - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tasync del(apiName, path, init) {\n\t\tif (!this._api) {\n\t\t\ttry {\n\t\t\t\tawait this.createInstance();\n\t\t\t} catch (error) {\n\t\t\t\treturn Promise.reject(error);\n\t\t\t}\n\t\t}\n\n\t\tconst endpoint = this._api.endpoint(apiName);\n\t\tif (endpoint.length === 0) {\n\t\t\treturn Promise.reject('API ' + apiName + ' does not exist');\n\t\t}\n\t\treturn this._api.del(endpoint + path, init);\n\t}\n\n\t/**\n\t * Make a HEAD request\n\t * @param {string} apiName  - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tasync head(apiName, path, init) {\n\t\tif (!this._api) {\n\t\t\ttry {\n\t\t\t\tawait this.createInstance();\n\t\t\t} catch (error) {\n\t\t\t\treturn Promise.reject(error);\n\t\t\t}\n\t\t}\n\n\t\tconst endpoint = this._api.endpoint(apiName);\n\t\tif (endpoint.length === 0) {\n\t\t\treturn Promise.reject('API ' + apiName + ' does not exist');\n\t\t}\n\t\treturn this._api.head(endpoint + path, init);\n\t}\n\n\t/**\n\t * Getting endpoint for API\n\t * @param {string} apiName - The name of the api\n\t * @return {string} - The endpoint of the api\n\t */\n\tasync endpoint(apiName) {\n\t\tif (!this._api) {\n\t\t\ttry {\n\t\t\t\tawait this.createInstance();\n\t\t\t} catch (error) {\n\t\t\t\treturn Promise.reject(error);\n\t\t\t}\n\t\t}\n\t\treturn this._api.endpoint(apiName);\n\t}\n\n\tprivate async _headerBasedAuth(defaultAuthenticationType?) {\n\t\tconst {\n\t\t\taws_appsync_authenticationType,\n\t\t\taws_appsync_apiKey: apiKey,\n\t\t} = this._options;\n\t\tconst authenticationType =\n\t\t\tdefaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n\t\tlet headers = {};\n\n\t\tswitch (authenticationType) {\n\t\t\tcase 'API_KEY':\n\t\t\t\tif (!apiKey) {\n\t\t\t\t\tthrow new Error('No api-key configured');\n\t\t\t\t}\n\t\t\t\theaders = {\n\t\t\t\t\tAuthorization: null,\n\t\t\t\t\t'X-Api-Key': apiKey,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase 'AWS_IAM':\n\t\t\t\tconst credentialsOK = await this._ensureCredentials();\n\t\t\t\tif (!credentialsOK) {\n\t\t\t\t\tthrow new Error('No credentials');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'OPENID_CONNECT':\n\t\t\t\tconst federatedInfo = await Cache.getItem('federatedInfo');\n\n\t\t\t\tif (!federatedInfo || !federatedInfo.token) {\n\t\t\t\t\tthrow new Error('No federated jwt');\n\t\t\t\t}\n\t\t\t\theaders = {\n\t\t\t\t\tAuthorization: federatedInfo.token,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase 'AMAZON_COGNITO_USER_POOLS':\n\t\t\t\tconst session = await Auth.currentSession();\n\t\t\t\theaders = {\n\t\t\t\t\tAuthorization: session.getAccessToken().getJwtToken(),\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\theaders = {\n\t\t\t\t\tAuthorization: null,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn headers;\n\t}\n\n\t/**\n\t * to get the operation type\n\t * @param operation\n\t */\n\tgetGraphqlOperationType(operation) {\n\t\tconst doc = parse(operation);\n\t\tconst {\n\t\t\tdefinitions: [{ operation: operationType }],\n\t\t} = doc;\n\n\t\treturn operationType;\n\t}\n\n\t/**\n\t * Executes a GraphQL operation\n\t *\n\t * @param {GraphQLOptions} GraphQL Options\n\t * @returns {Promise<GraphQLResult> | Observable<object>}\n\t */\n\tgraphql({ query: paramQuery, variables = {}, authMode }: GraphQLOptions) {\n\t\tconst query =\n\t\t\ttypeof paramQuery === 'string'\n\t\t\t\t? parse(paramQuery)\n\t\t\t\t: parse(print(paramQuery));\n\n\t\tconst [operationDef = {}] = query.definitions.filter(\n\t\t\tdef => def.kind === 'OperationDefinition'\n\t\t);\n\t\tconst {\n\t\t\toperation: operationType,\n\t\t} = operationDef as OperationDefinitionNode;\n\n\t\tswitch (operationType) {\n\t\t\tcase 'query':\n\t\t\tcase 'mutation':\n\t\t\t\treturn this._graphql({ query, variables, authMode });\n\t\t\tcase 'subscription':\n\t\t\t\treturn this._graphqlSubscribe({ query, variables, authMode });\n\t\t}\n\n\t\tthrow new Error(`invalid operation type: ${operationType}`);\n\t}\n\n\tprivate async _graphql(\n\t\t{ query, variables, authMode }: GraphQLOptions,\n\t\tadditionalHeaders = {}\n\t): Promise<GraphQLResult> {\n\t\tif (!this._api) {\n\t\t\tawait this.createInstance();\n\t\t}\n\n\t\tconst {\n\t\t\taws_appsync_region: region,\n\t\t\taws_appsync_graphqlEndpoint: appSyncGraphqlEndpoint,\n\t\t\tgraphql_headers = () => ({}),\n\t\t\tgraphql_endpoint: customGraphqlEndpoint,\n\t\t\tgraphql_endpoint_iam_region: customEndpointRegion,\n\t\t} = this._options;\n\n\t\tconst headers = {\n\t\t\t...(!customGraphqlEndpoint && (await this._headerBasedAuth(authMode))),\n\t\t\t...(customGraphqlEndpoint &&\n\t\t\t\t(customEndpointRegion\n\t\t\t\t\t? await this._headerBasedAuth(authMode)\n\t\t\t\t\t: { Authorization: null })),\n\t\t\t...(await graphql_headers({ query, variables })),\n\t\t\t...additionalHeaders,\n\t\t\t...(!customGraphqlEndpoint && {\n\t\t\t\t[USER_AGENT_HEADER]: Constants.userAgent,\n\t\t\t}),\n\t\t};\n\n\t\tconst body = {\n\t\t\tquery: print(query),\n\t\t\tvariables,\n\t\t};\n\n\t\tconst init = {\n\t\t\theaders,\n\t\t\tbody,\n\t\t\tsignerServiceInfo: {\n\t\t\t\tservice: !customGraphqlEndpoint ? 'appsync' : 'execute-api',\n\t\t\t\tregion: !customGraphqlEndpoint ? region : customEndpointRegion,\n\t\t\t},\n\t\t};\n\n\t\tconst endpoint = customGraphqlEndpoint || appSyncGraphqlEndpoint;\n\n\t\tif (!endpoint) {\n\t\t\tconst error = new GraphQLError('No graphql endpoint provided.');\n\n\t\t\tthrow {\n\t\t\t\tdata: {},\n\t\t\t\terrors: [error],\n\t\t\t};\n\t\t}\n\n\t\tlet response;\n\t\ttry {\n\t\t\tresponse = await this._api.post(endpoint, init);\n\t\t} catch (err) {\n\t\t\tresponse = {\n\t\t\t\tdata: {},\n\t\t\t\terrors: [new GraphQLError(err.message)],\n\t\t\t};\n\t\t}\n\n\t\tconst { errors } = response;\n\n\t\tif (errors && errors.length) {\n\t\t\tthrow response;\n\t\t}\n\n\t\treturn response;\n\t}\n\n\tprivate clientIdentifier = uuid();\n\n\tprivate _graphqlSubscribe({\n\t\tquery,\n\t\tvariables,\n\t\tauthMode,\n\t}: GraphQLOptions): Observable<object> {\n\t\tif (Amplify.PubSub && typeof Amplify.PubSub.subscribe === 'function') {\n\t\t\treturn new Observable(observer => {\n\t\t\t\tlet handle = null;\n\n\t\t\t\t(async () => {\n\t\t\t\t\tconst { aws_appsync_authenticationType } = this._options;\n\t\t\t\t\tconst authenticationType = authMode || aws_appsync_authenticationType;\n\t\t\t\t\tconst additionalheaders = {\n\t\t\t\t\t\t...(authenticationType === 'API_KEY'\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t'x-amz-subscriber-id': this.clientIdentifier,\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t: {}),\n\t\t\t\t\t};\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\textensions: { subscription },\n\t\t\t\t\t\t} = await this._graphql(\n\t\t\t\t\t\t\t{ query, variables, authMode },\n\t\t\t\t\t\t\tadditionalheaders\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst { newSubscriptions } = subscription;\n\n\t\t\t\t\t\tconst newTopics = Object.getOwnPropertyNames(newSubscriptions).map(\n\t\t\t\t\t\t\tp => newSubscriptions[p].topic\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst observable = Amplify.PubSub.subscribe(newTopics, {\n\t\t\t\t\t\t\t...subscription,\n\t\t\t\t\t\t\tprovider: INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\thandle = observable.subscribe({\n\t\t\t\t\t\t\tnext: data => observer.next(data),\n\t\t\t\t\t\t\tcomplete: () => observer.complete(),\n\t\t\t\t\t\t\terror: data => {\n\t\t\t\t\t\t\t\tconst error = { ...data };\n\t\t\t\t\t\t\t\tif (!error.errors) {\n\t\t\t\t\t\t\t\t\terror.errors = [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t...new GraphQLError('Network Error'),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tobserver.error(error);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tobserver.error(error);\n\t\t\t\t\t}\n\t\t\t\t})();\n\n\t\t\t\treturn () => {\n\t\t\t\t\tif (handle) {\n\t\t\t\t\t\thandle.unsubscribe();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t} else {\n\t\t\tlogger.debug('No pubsub module applied for subscription');\n\t\t\tthrow new Error('No pubsub module applied for subscription');\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_ensureCredentials() {\n\t\treturn Credentials.get()\n\t\t\t.then(credentials => {\n\t\t\t\tif (!credentials) return false;\n\t\t\t\tconst cred = Credentials.shear(credentials);\n\t\t\t\tlogger.debug('set credentials for api', cred);\n\n\t\t\t\treturn true;\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tlogger.warn('ensure credentials error', err);\n\t\t\t\treturn false;\n\t\t\t});\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}