{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nimport { ConsoleLogger as Logger, Credentials } from '@aws-amplify/core';\nimport * as Kinesis from 'aws-sdk/clients/kinesis';\nvar logger = new Logger('AWSKineisProvider');\n// events buffer\nvar BUFFER_SIZE = 1000;\nvar FLUSH_SIZE = 100;\nvar FLUSH_INTERVAL = 5 * 1000; // 5s\nvar RESEND_LIMIT = 5;\nvar AWSKinesisProvider = /** @class */function () {\n  function AWSKinesisProvider(config) {\n    this._buffer = [];\n    this._config = config ? config : {};\n    this._config.bufferSize = this._config.bufferSize || BUFFER_SIZE;\n    this._config.flushSize = this._config.flushSize || FLUSH_SIZE;\n    this._config.flushInterval = this._config.flushInterval || FLUSH_INTERVAL;\n    this._config.resendLimit = this._config.resendLimit || RESEND_LIMIT;\n    // events batch\n    var that = this;\n    // flush event buffer\n    this._setupTimer();\n  }\n  AWSKinesisProvider.prototype._setupTimer = function () {\n    var _this = this;\n    if (this._timer) {\n      clearInterval(this._timer);\n    }\n    var _a = this._config,\n      flushSize = _a.flushSize,\n      flushInterval = _a.flushInterval;\n    var that = this;\n    this._timer = setInterval(function () {\n      var size = _this._buffer.length < flushSize ? _this._buffer.length : flushSize;\n      var events = [];\n      for (var i = 0; i < size; i += 1) {\n        var params = _this._buffer.shift();\n        events.push(params);\n      }\n      that._sendFromBuffer(events);\n    }, flushInterval);\n  };\n  /**\n   * get the category of the plugin\n   */\n  AWSKinesisProvider.prototype.getCategory = function () {\n    return 'Analytics';\n  };\n  /**\n   * get provider name of the plugin\n   */\n  AWSKinesisProvider.prototype.getProviderName = function () {\n    return 'AWSKinesis';\n  };\n  /**\n   * configure the plugin\n   * @param {Object} config - configuration\n   */\n  AWSKinesisProvider.prototype.configure = function (config) {\n    logger.debug('configure Analytics', config);\n    var conf = config ? config : {};\n    this._config = Object.assign({}, this._config, conf);\n    this._setupTimer();\n    return this._config;\n  };\n  /**\n   * record an event\n   * @param {Object} params - the params of an event\n   */\n  AWSKinesisProvider.prototype.record = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentials;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this._getCredentials()];\n          case 1:\n            credentials = _a.sent();\n            if (!credentials) return [2 /*return*/, Promise.resolve(false)];\n            Object.assign(params, {\n              config: this._config,\n              credentials: credentials\n            });\n            return [2 /*return*/, this._putToBuffer(params)];\n        }\n      });\n    });\n  };\n  AWSKinesisProvider.prototype.updateEndpoint = function (params) {\n    logger.debug('updateEndpoint is not implemented in Kinesis provider');\n    return Promise.resolve(true);\n  };\n  /**\n   * @private\n   * @param params - params for the event recording\n   * Put events into buffer\n   */\n  AWSKinesisProvider.prototype._putToBuffer = function (params) {\n    if (this._buffer.length < BUFFER_SIZE) {\n      this._buffer.push(params);\n      return Promise.resolve(true);\n    } else {\n      logger.debug('exceed analytics events buffer size');\n      return Promise.reject(false);\n    }\n  };\n  AWSKinesisProvider.prototype._sendFromBuffer = function (events) {\n    var _this = this;\n    // collapse events by credentials\n    // events = [ {params} ]\n    var eventsGroups = [];\n    var preCred = null;\n    var group = [];\n    for (var i = 0; i < events.length; i += 1) {\n      var cred = events[i].credentials;\n      if (i === 0) {\n        group.push(events[i]);\n        preCred = cred;\n      } else {\n        if (cred.sessionToken === preCred.sessionToken && cred.identityId === preCred.identityId) {\n          logger.debug('no change for cred, put event in the same group');\n          group.push(events[i]);\n        } else {\n          eventsGroups.push(group);\n          group = [];\n          group.push(events[i]);\n          preCred = cred;\n        }\n      }\n    }\n    eventsGroups.push(group);\n    eventsGroups.map(function (evts) {\n      _this._sendEvents(evts);\n    });\n  };\n  AWSKinesisProvider.prototype._sendEvents = function (group) {\n    var _this = this;\n    if (group.length === 0) {\n      // logger.debug('events array is empty, directly return');\n      return;\n    }\n    var _a = group[0],\n      config = _a.config,\n      credentials = _a.credentials;\n    var initClients = this._init(config, credentials);\n    if (!initClients) return false;\n    var records = {};\n    group.map(function (params) {\n      // spit by streamName\n      var evt = params.event;\n      var streamName = evt.streamName;\n      if (records[streamName] === undefined) {\n        records[streamName] = [];\n      }\n      var Data = JSON.stringify(evt.data);\n      var PartitionKey = evt.partitionKey || 'partition-' + credentials.identityId;\n      var record = {\n        Data: Data,\n        PartitionKey: PartitionKey\n      };\n      records[streamName].push(record);\n    });\n    Object.keys(records).map(function (streamName) {\n      logger.debug('putting records to kinesis with records', records[streamName]);\n      _this._kinesis.putRecords({\n        Records: records[streamName],\n        StreamName: streamName\n      }, function (err, data) {\n        if (err) logger.debug('Failed to upload records to Kinesis', err);else logger.debug('Upload records to stream', streamName);\n      });\n    });\n  };\n  AWSKinesisProvider.prototype._init = function (config, credentials) {\n    logger.debug('init clients');\n    if (this._kinesis && this._config.credentials && this._config.credentials.sessionToken === credentials.sessionToken && this._config.credentials.identityId === credentials.identityId) {\n      logger.debug('no change for analytics config, directly return from init');\n      return true;\n    }\n    this._config.credentials = credentials;\n    var region = config.region;\n    logger.debug('initialize kinesis with credentials', credentials);\n    this._kinesis = new Kinesis({\n      apiVersion: '2013-12-02',\n      region: region,\n      credentials: credentials\n    });\n    return true;\n  };\n  /**\n   * @private\n   * check if current credentials exists\n   */\n  AWSKinesisProvider.prototype._getCredentials = function () {\n    var that = this;\n    return Credentials.get().then(function (credentials) {\n      if (!credentials) return null;\n      logger.debug('set credentials for analytics', that._config.credentials);\n      return Credentials.shear(credentials);\n    }).catch(function (err) {\n      logger.debug('ensure credentials error', err);\n      return null;\n    });\n  };\n  return AWSKinesisProvider;\n}();\nexport default AWSKinesisProvider;","map":{"version":3,"names":["ConsoleLogger","Logger","Credentials","Kinesis","logger","BUFFER_SIZE","FLUSH_SIZE","FLUSH_INTERVAL","RESEND_LIMIT","AWSKinesisProvider","config","_buffer","_config","bufferSize","flushSize","flushInterval","resendLimit","that","_setupTimer","prototype","_this","_timer","clearInterval","_a","setInterval","size","length","events","i","params","shift","push","_sendFromBuffer","getCategory","getProviderName","configure","debug","conf","Object","assign","record","_getCredentials","credentials","sent","Promise","resolve","_putToBuffer","updateEndpoint","reject","eventsGroups","preCred","group","cred","sessionToken","identityId","map","evts","_sendEvents","initClients","_init","records","evt","event","streamName","undefined","Data","JSON","stringify","data","PartitionKey","partitionKey","keys","_kinesis","putRecords","Records","StreamName","err","region","apiVersion","get","then","shear","catch"],"sources":["C:\\Study\\6805\\React\\reacthtml\\node_modules\\@aws-amplify\\analytics\\src\\Providers\\AWSKinesisProvider.ts"],"sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { ConsoleLogger as Logger, Credentials } from '@aws-amplify/core';\nimport * as Kinesis from 'aws-sdk/clients/kinesis';\nimport Cache from '@aws-amplify/cache';\nimport { AnalyticsProvider } from '../types';\n\nconst logger = new Logger('AWSKineisProvider');\n\n// events buffer\nconst BUFFER_SIZE = 1000;\nconst FLUSH_SIZE = 100;\nconst FLUSH_INTERVAL = 5 * 1000; // 5s\nconst RESEND_LIMIT = 5;\n\nexport default class AWSKinesisProvider implements AnalyticsProvider {\n\tprivate _config;\n\tprivate _kinesis;\n\tprivate _buffer;\n\tprivate _timer;\n\n\tconstructor(config?) {\n\t\tthis._buffer = [];\n\t\tthis._config = config ? config : {};\n\t\tthis._config.bufferSize = this._config.bufferSize || BUFFER_SIZE;\n\t\tthis._config.flushSize = this._config.flushSize || FLUSH_SIZE;\n\t\tthis._config.flushInterval = this._config.flushInterval || FLUSH_INTERVAL;\n\t\tthis._config.resendLimit = this._config.resendLimit || RESEND_LIMIT;\n\n\t\t// events batch\n\t\tconst that = this;\n\n\t\t// flush event buffer\n\t\tthis._setupTimer();\n\t}\n\n\tprivate _setupTimer() {\n\t\tif (this._timer) {\n\t\t\tclearInterval(this._timer);\n\t\t}\n\t\tconst { flushSize, flushInterval } = this._config;\n\t\tconst that = this;\n\t\tthis._timer = setInterval(() => {\n\t\t\tconst size =\n\t\t\t\tthis._buffer.length < flushSize ? this._buffer.length : flushSize;\n\t\t\tconst events = [];\n\t\t\tfor (let i = 0; i < size; i += 1) {\n\t\t\t\tconst params = this._buffer.shift();\n\t\t\t\tevents.push(params);\n\t\t\t}\n\t\t\tthat._sendFromBuffer(events);\n\t\t}, flushInterval);\n\t}\n\n\t/**\n\t * get the category of the plugin\n\t */\n\tpublic getCategory(): string {\n\t\treturn 'Analytics';\n\t}\n\n\t/**\n\t * get provider name of the plugin\n\t */\n\tpublic getProviderName(): string {\n\t\treturn 'AWSKinesis';\n\t}\n\n\t/**\n\t * configure the plugin\n\t * @param {Object} config - configuration\n\t */\n\tpublic configure(config): object {\n\t\tlogger.debug('configure Analytics', config);\n\t\tconst conf = config ? config : {};\n\t\tthis._config = Object.assign({}, this._config, conf);\n\n\t\tthis._setupTimer();\n\t\treturn this._config;\n\t}\n\n\t/**\n\t * record an event\n\t * @param {Object} params - the params of an event\n\t */\n\tpublic async record(params): Promise<boolean> {\n\t\tconst credentials = await this._getCredentials();\n\t\tif (!credentials) return Promise.resolve(false);\n\n\t\tObject.assign(params, { config: this._config, credentials });\n\n\t\treturn this._putToBuffer(params);\n\t}\n\n\tpublic updateEndpoint(params) {\n\t\tlogger.debug('updateEndpoint is not implemented in Kinesis provider');\n\t\treturn Promise.resolve(true);\n\t}\n\n\t/**\n\t * @private\n\t * @param params - params for the event recording\n\t * Put events into buffer\n\t */\n\tprivate _putToBuffer(params) {\n\t\tif (this._buffer.length < BUFFER_SIZE) {\n\t\t\tthis._buffer.push(params);\n\t\t\treturn Promise.resolve(true);\n\t\t} else {\n\t\t\tlogger.debug('exceed analytics events buffer size');\n\t\t\treturn Promise.reject(false);\n\t\t}\n\t}\n\n\tprivate _sendFromBuffer(events) {\n\t\t// collapse events by credentials\n\t\t// events = [ {params} ]\n\t\tconst eventsGroups = [];\n\t\tlet preCred = null;\n\t\tlet group = [];\n\t\tfor (let i = 0; i < events.length; i += 1) {\n\t\t\tconst cred = events[i].credentials;\n\t\t\tif (i === 0) {\n\t\t\t\tgroup.push(events[i]);\n\t\t\t\tpreCred = cred;\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tcred.sessionToken === preCred.sessionToken &&\n\t\t\t\t\tcred.identityId === preCred.identityId\n\t\t\t\t) {\n\t\t\t\t\tlogger.debug('no change for cred, put event in the same group');\n\t\t\t\t\tgroup.push(events[i]);\n\t\t\t\t} else {\n\t\t\t\t\teventsGroups.push(group);\n\t\t\t\t\tgroup = [];\n\t\t\t\t\tgroup.push(events[i]);\n\t\t\t\t\tpreCred = cred;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\teventsGroups.push(group);\n\n\t\teventsGroups.map(evts => {\n\t\t\tthis._sendEvents(evts);\n\t\t});\n\t}\n\n\tprivate _sendEvents(group) {\n\t\tif (group.length === 0) {\n\t\t\t// logger.debug('events array is empty, directly return');\n\t\t\treturn;\n\t\t}\n\n\t\tconst { config, credentials } = group[0];\n\n\t\tconst initClients = this._init(config, credentials);\n\t\tif (!initClients) return false;\n\n\t\tconst records = {};\n\n\t\tgroup.map(params => {\n\t\t\t// spit by streamName\n\t\t\tconst evt = params.event;\n\t\t\tconst { streamName } = evt;\n\t\t\tif (records[streamName] === undefined) {\n\t\t\t\trecords[streamName] = [];\n\t\t\t}\n\n\t\t\tconst Data = JSON.stringify(evt.data);\n\t\t\tconst PartitionKey =\n\t\t\t\tevt.partitionKey || 'partition-' + credentials.identityId;\n\t\t\tconst record = { Data, PartitionKey };\n\t\t\trecords[streamName].push(record);\n\t\t});\n\n\t\tObject.keys(records).map(streamName => {\n\t\t\tlogger.debug(\n\t\t\t\t'putting records to kinesis with records',\n\t\t\t\trecords[streamName]\n\t\t\t);\n\t\t\tthis._kinesis.putRecords(\n\t\t\t\t{\n\t\t\t\t\tRecords: records[streamName],\n\t\t\t\t\tStreamName: streamName,\n\t\t\t\t},\n\t\t\t\t(err, data) => {\n\t\t\t\t\tif (err) logger.debug('Failed to upload records to Kinesis', err);\n\t\t\t\t\telse logger.debug('Upload records to stream', streamName);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\n\tprivate _init(config, credentials) {\n\t\tlogger.debug('init clients');\n\n\t\tif (\n\t\t\tthis._kinesis &&\n\t\t\tthis._config.credentials &&\n\t\t\tthis._config.credentials.sessionToken === credentials.sessionToken &&\n\t\t\tthis._config.credentials.identityId === credentials.identityId\n\t\t) {\n\t\t\tlogger.debug('no change for analytics config, directly return from init');\n\t\t\treturn true;\n\t\t}\n\n\t\tthis._config.credentials = credentials;\n\t\tconst { region } = config;\n\t\tlogger.debug('initialize kinesis with credentials', credentials);\n\t\tthis._kinesis = new Kinesis({\n\t\t\tapiVersion: '2013-12-02',\n\t\t\tregion,\n\t\t\tcredentials,\n\t\t});\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @private\n\t * check if current credentials exists\n\t */\n\tprivate _getCredentials() {\n\t\tconst that = this;\n\t\treturn Credentials.get()\n\t\t\t.then(credentials => {\n\t\t\t\tif (!credentials) return null;\n\t\t\t\tlogger.debug('set credentials for analytics', that._config.credentials);\n\t\t\t\treturn Credentials.shear(credentials);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tlogger.debug('ensure credentials error', err);\n\t\t\t\treturn null;\n\t\t\t});\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}