{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Buffer } from 'buffer/';\n\n/** @class */\n\nvar CognitoJwtToken = function () {\n  /**\n   * Constructs a new CognitoJwtToken object\n   * @param {string=} token The JWT token.\n   */\n  function CognitoJwtToken(token) {\n    _classCallCheck(this, CognitoJwtToken);\n\n    // Assign object\n    this.jwtToken = token || '';\n    this.payload = this.decodePayload();\n  }\n\n  /**\n   * @returns {string} the record's token.\n   */\n\n  CognitoJwtToken.prototype.getJwtToken = function getJwtToken() {\n    return this.jwtToken;\n  };\n\n  /**\n   * @returns {int} the token's expiration (exp member).\n   */\n\n  CognitoJwtToken.prototype.getExpiration = function getExpiration() {\n    return this.payload.exp;\n  };\n\n  /**\n   * @returns {int} the token's \"issued at\" (iat member).\n   */\n\n  CognitoJwtToken.prototype.getIssuedAt = function getIssuedAt() {\n    return this.payload.iat;\n  };\n\n  /**\n   * @returns {object} the token's payload.\n   */\n\n  CognitoJwtToken.prototype.decodePayload = function decodePayload() {\n    var payload = this.jwtToken.split('.')[1];\n    try {\n      return JSON.parse(Buffer.from(payload, 'base64').toString('utf8'));\n    } catch (err) {\n      return {};\n    }\n  };\n  return CognitoJwtToken;\n}();\nexport default CognitoJwtToken;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","Buffer","CognitoJwtToken","token","jwtToken","payload","decodePayload","prototype","getJwtToken","getExpiration","exp","getIssuedAt","iat","split","JSON","parse","from","toString","err"],"sources":["C:/Study/6805/React/reacthtml/node_modules/amazon-cognito-identity-js/es/CognitoJwtToken.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Buffer } from 'buffer/';\n\n/** @class */\n\nvar CognitoJwtToken = function () {\n\t/**\n  * Constructs a new CognitoJwtToken object\n  * @param {string=} token The JWT token.\n  */\n\tfunction CognitoJwtToken(token) {\n\t\t_classCallCheck(this, CognitoJwtToken);\n\n\t\t// Assign object\n\t\tthis.jwtToken = token || '';\n\t\tthis.payload = this.decodePayload();\n\t}\n\n\t/**\n  * @returns {string} the record's token.\n  */\n\n\n\tCognitoJwtToken.prototype.getJwtToken = function getJwtToken() {\n\t\treturn this.jwtToken;\n\t};\n\n\t/**\n  * @returns {int} the token's expiration (exp member).\n  */\n\n\n\tCognitoJwtToken.prototype.getExpiration = function getExpiration() {\n\t\treturn this.payload.exp;\n\t};\n\n\t/**\n  * @returns {int} the token's \"issued at\" (iat member).\n  */\n\n\n\tCognitoJwtToken.prototype.getIssuedAt = function getIssuedAt() {\n\t\treturn this.payload.iat;\n\t};\n\n\t/**\n  * @returns {object} the token's payload.\n  */\n\n\n\tCognitoJwtToken.prototype.decodePayload = function decodePayload() {\n\t\tvar payload = this.jwtToken.split('.')[1];\n\t\ttry {\n\t\t\treturn JSON.parse(Buffer.from(payload, 'base64').toString('utf8'));\n\t\t} catch (err) {\n\t\t\treturn {};\n\t\t}\n\t};\n\n\treturn CognitoJwtToken;\n}();\n\nexport default CognitoJwtToken;"],"mappings":"AAAA,SAASA,eAAeA,CAACC,QAAQ,EAAEC,WAAW,EAAE;EAAE,IAAI,EAAED,QAAQ,YAAYC,WAAW,CAAC,EAAE;IAAE,MAAM,IAAIC,SAAS,CAAC,mCAAmC,CAAC;EAAE;AAAE;;AAExJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,MAAM,QAAQ,SAAS;;AAEhC;;AAEA,IAAIC,eAAe,GAAG,YAAY;EACjC;AACD;AACA;AACA;EACC,SAASA,eAAeA,CAACC,KAAK,EAAE;IAC/BN,eAAe,CAAC,IAAI,EAAEK,eAAe,CAAC;;IAEtC;IACA,IAAI,CAACE,QAAQ,GAAGD,KAAK,IAAI,EAAE;IAC3B,IAAI,CAACE,OAAO,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC;EACpC;;EAEA;AACD;AACA;;EAGCJ,eAAe,CAACK,SAAS,CAACC,WAAW,GAAG,SAASA,WAAWA,CAAA,EAAG;IAC9D,OAAO,IAAI,CAACJ,QAAQ;EACrB,CAAC;;EAED;AACD;AACA;;EAGCF,eAAe,CAACK,SAAS,CAACE,aAAa,GAAG,SAASA,aAAaA,CAAA,EAAG;IAClE,OAAO,IAAI,CAACJ,OAAO,CAACK,GAAG;EACxB,CAAC;;EAED;AACD;AACA;;EAGCR,eAAe,CAACK,SAAS,CAACI,WAAW,GAAG,SAASA,WAAWA,CAAA,EAAG;IAC9D,OAAO,IAAI,CAACN,OAAO,CAACO,GAAG;EACxB,CAAC;;EAED;AACD;AACA;;EAGCV,eAAe,CAACK,SAAS,CAACD,aAAa,GAAG,SAASA,aAAaA,CAAA,EAAG;IAClE,IAAID,OAAO,GAAG,IAAI,CAACD,QAAQ,CAACS,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACzC,IAAI;MACH,OAAOC,IAAI,CAACC,KAAK,CAACd,MAAM,CAACe,IAAI,CAACX,OAAO,EAAE,QAAQ,CAAC,CAACY,QAAQ,CAAC,MAAM,CAAC,CAAC;IACnE,CAAC,CAAC,OAAOC,GAAG,EAAE;MACb,OAAO,CAAC,CAAC;IACV;EACD,CAAC;EAED,OAAOhB,eAAe;AACvB,CAAC,CAAC,CAAC;AAEH,eAAeA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}