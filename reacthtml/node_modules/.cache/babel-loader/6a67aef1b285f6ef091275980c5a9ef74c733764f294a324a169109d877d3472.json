{"ast":null,"code":"var _jsxFileName = \"C:\\\\Study\\\\6805\\\\React\\\\reacthtml\\\\src\\\\pages\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Auth } from 'aws-amplify';\nimport { notification } from 'antd';\nimport { Link, Redirect } from 'react-router-dom';\nimport { colors } from '../../Themes/Colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForgotPasswordPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = event => {\n    event.preventDefault();\n    setLoading(true);\n    Auth.forgotPassword(username).then(data => {\n      notification.success({\n        message: 'Redirecting you in a few!',\n        description: 'Account confirmed successfully!',\n        placement: 'topRight',\n        duration: 1.5,\n        onClose: () => {\n          setRedirect(true);\n        }\n      });\n    }).catch(err => {\n      notification.error({\n        message: 'User confirmation failed',\n        description: err.message,\n        placement: 'topRight',\n        duration: 1.5\n      });\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: 'white'\n      },\n      className: \"header\",\n      children: \"SLP- Structured Learning Platform\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '300px',\n        margin: '0 auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            name: \"username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          style: {\n            marginTop: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              width: '100%',\n              backgroundColor: '#4c4456',\n              border: '0px',\n              color: 'white',\n              padding: '8px 16px',\n              borderRadius: '4px'\n            },\n            type: \"submit\",\n            className: \"login-form-button\",\n            disabled: loading,\n            children: loading ? 'Confirming...' : 'Confirm Username'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), redirect && /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/reset-password',\n          search: `?username=${username}`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        style: {\n          marginTop: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            style: {\n              color: 'black'\n            },\n            children: \"Ooh! Wait! I've remembered!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(ForgotPasswordPage, \"9qPImmMqpvhmrhkS3AnSCsZ7z74=\");\n_c = ForgotPasswordPage;\nexport default ForgotPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ForgotPasswordPage\");","map":{"version":3,"names":["React","useState","Auth","notification","Link","Redirect","colors","jsxDEV","_jsxDEV","ForgotPasswordPage","_s","username","setUsername","redirect","setRedirect","loading","setLoading","handleSubmit","event","preventDefault","forgotPassword","then","data","success","message","description","placement","duration","onClose","catch","err","error","Fragment","children","style","color","className","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","margin","onSubmit","htmlFor","type","id","name","value","onChange","e","target","required","marginTop","width","backgroundColor","border","padding","borderRadius","disabled","to","pathname","search","_c","$RefreshReg$"],"sources":["C:/Study/6805/React/reacthtml/src/pages/ForgotPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Auth } from 'aws-amplify';\r\nimport { notification } from 'antd';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { colors } from '../../Themes/Colors';\r\n\r\nfunction ForgotPasswordPage() {\r\n  const [username, setUsername] = useState('');\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    setLoading(true);\r\n\r\n    Auth.forgotPassword(username)\r\n      .then(data => {\r\n        notification.success({\r\n          message: 'Redirecting you in a few!',\r\n          description: 'Account confirmed successfully!',\r\n          placement: 'topRight',\r\n          duration: 1.5,\r\n          onClose: () => {\r\n            setRedirect(true);\r\n          }\r\n        });\r\n      })\r\n      .catch(err => {\r\n        notification.error({\r\n          message: 'User confirmation failed',\r\n          description: err.message,\r\n          placement: 'topRight',\r\n          duration: 1.5\r\n        });\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1 style={{ color: 'white' }} className=\"header\">SLP- Structured Learning Platform</h1>\r\n      <div style={{ maxWidth: '300px', margin: '0 auto' }}>\r\n        <form onSubmit={handleSubmit} className=\"login-form\">\r\n          <div>\r\n            <label htmlFor=\"username\">Username:</label>\r\n            <input \r\n              type=\"text\" \r\n              id=\"username\" \r\n              name=\"username\" \r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              required \r\n            />\r\n          </div>\r\n          <div className=\"text-center\" style={{ marginTop: '10px' }}>\r\n            <button \r\n              style={{ \r\n                width: '100%', \r\n                backgroundColor: '#4c4456', \r\n                border: '0px', \r\n                color: 'white',\r\n                padding: '8px 16px',\r\n                borderRadius: '4px'\r\n              }}\r\n              type=\"submit\" \r\n              className=\"login-form-button\"\r\n              disabled={loading}\r\n            >\r\n              {loading ? 'Confirming...' : 'Confirm Username'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n        {redirect && (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/reset-password',\r\n              search: `?username=${username}`\r\n            }}\r\n          />\r\n        )}\r\n        <div className=\"text-center\" style={{ marginTop: '10px' }}>\r\n          <p>\r\n            <Link to=\"/login\" style={{ color: 'black' }}>Ooh! Wait! I've remembered!</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ForgotPasswordPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}